{"ast":null,"code":"var _jsxFileName = \"D:\\\\Navikenz\\\\pro\\\\navihire\\\\frontend\\\\src\\\\components\\\\FlightSearch.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// interface FlightSearchProps {\n//   socket: WebSocket | null;\n//   sendMessage: (message: string) => void;\n//   isConnected: boolean;\n// }\n\n// interface FlightResult {\n//   airline: string;\n//   price: string;\n//   time: string;\n//   duration: string;\n//   flightNumber: string;\n//   route: string;\n//   bookingUrl?: string;\n//   stops?: number;\n//   aircraft?: string;\n//   source: string;\n//   scraped: boolean;\n// }\n\n// const FlightSearch: React.FC<FlightSearchProps> = ({ socket, sendMessage, isConnected }) => {\n//   const [origin, setOrigin] = useState('');\n//   const [destination, setDestination] = useState('');\n//   const [date, setDate] = useState('');\n//   const [passengers, setPassengers] = useState('1');\n//   const [travelClass, setTravelClass] = useState('economy');\n//   const [searching, setSearching] = useState(false);\n//   const [results, setResults] = useState<FlightResult[]>([]);\n//   const [searchId, setSearchId] = useState('');\n//   const [aiAnalysis, setAiAnalysis] = useState('');\n\n//   // Listen for WebSocket messages\n//   useEffect(() => {\n//     if (socket) {\n//       const handleMessage = (event: MessageEvent) => {\n//         try {\n//           const data = JSON.parse(event.data);\n\n//           if (data.type === 'message' && data.agent_used === 'flight_agent') {\n//             setSearching(false);\n\n//             // Parse flight results from AI response\n//             if (data.flight_results && data.flight_results.length > 0) {\n//               const enhancedResults = data.flight_results.map((flight: any, index: number) => ({\n//                 ...flight,\n//                 bookingUrl: generateBookingUrl(flight, origin, destination, date),\n//                 flightNumber: flight.flight_number || `${flight.airline.substring(0, 2).toUpperCase()}-${Math.floor(Math.random() * 900) + 100}`\n//               }));\n//               setResults(enhancedResults);\n//             }\n\n//             // Set AI analysis\n//             if (data.ai_analysis) {\n//               setAiAnalysis(data.ai_analysis);\n//             }\n\n//             // Handle screenshot if available\n//             if (data.screenshot_path) {\n//               console.log('Screenshot available:', data.screenshot_path);\n//             }\n//           }\n//         } catch (error) {\n//           console.error('Error parsing WebSocket message:', error);\n//         }\n//       };\n\n//       socket.addEventListener('message', handleMessage);\n//       return () => socket.removeEventListener('message', handleMessage);\n//     }\n//   }, [socket, origin, destination, date]);\n\n//   const generateBookingUrl = (flight: any, origin: string, destination: string, date: string) => {\n//     const airline = flight.airline.toLowerCase();\n\n//     // Generate booking URLs based on airline\n//     if (airline.includes('indigo')) {\n//       return `https://www.goindigo.in/booking/flight-select?origin=${origin}&destination=${destination}&departure=${date}&passengers=${passengers}&class=${travelClass}`;\n//     } else if (airline.includes('air india')) {\n//       return `https://www.airindia.in/booking?from=${origin}&to=${destination}&date=${date}&pax=${passengers}&class=${travelClass}`;\n//     } else if (airline.includes('spicejet')) {\n//       return `https://www.spicejet.com/flight-booking?origin=${origin}&destination=${destination}&departure=${date}&passengers=${passengers}`;\n//     } else if (airline.includes('vistara')) {\n//       return `https://www.airvistara.com/booking/flight-search?origin=${origin}&destination=${destination}&date=${date}&passengers=${passengers}`;\n//     } else {\n//       // Generic booking URL for other airlines\n//       return `https://www.makemytrip.com/flight/search?itinerary=${origin}-${destination}-${date}&tripType=O&paxType=A-${passengers}_C-0_I-0&intl=false&class=${travelClass.toUpperCase()}`;\n//     }\n//   };\n\n//   const handleSearch = async () => {\n//     if (!origin || !destination) {\n//       alert('Please enter both origin and destination');\n//       return;\n//     }\n\n//     if (!isConnected) {\n//       alert('AI assistant is not connected. Please wait for connection.');\n//       return;\n//     }\n\n//     setSearching(true);\n//     setResults([]);\n//     setAiAnalysis('');\n\n//     const currentSearchId = Date.now().toString();\n//     setSearchId(currentSearchId);\n\n//     // Format date for AI\n//     const searchDate = date || new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n\n//     // Send comprehensive search request to AI\n//     const searchQuery = `Search flights from ${origin} to ${destination} on ${searchDate} for ${passengers} passenger(s) in ${travelClass} class. Please provide real-time flight options with prices, timings, and booking recommendations.`;\n\n//     sendMessage(searchQuery);\n\n//     // Fallback timeout in case AI doesn't respond\n//     setTimeout(() => {\n//       if (searching) {\n//         setSearching(false);\n//         // Provide fallback data if AI doesn't respond\n//         const fallbackResults: FlightResult[] = [\n//           {\n//             airline: 'IndiGo',\n//             price: '₹8,500',\n//             time: '08:30 AM',\n//             duration: '2h 15m',\n//             flightNumber: '6E-234',\n//             route: `${origin} → ${destination}`,\n//             stops: 0,\n//             aircraft: 'A320',\n//             source: 'Fallback Data',\n//             scraped: false,\n//             bookingUrl: generateBookingUrl({ airline: 'IndiGo' }, origin, destination, searchDate)\n//           },\n//           {\n//             airline: 'Air India',\n//             price: '₹12,200',\n//             time: '02:15 PM',\n//             duration: '2h 30m',\n//             flightNumber: 'AI-131',\n//             route: `${origin} → ${destination}`,\n//             stops: 0,\n//             aircraft: 'A321',\n//             source: 'Fallback Data',\n//             scraped: false,\n//             bookingUrl: generateBookingUrl({ airline: 'Air India' }, origin, destination, searchDate)\n//           },\n//           {\n//             airline: 'SpiceJet',\n//             price: '₹7,800',\n//             time: '06:45 PM',\n//             duration: '2h 20m',\n//             flightNumber: 'SG-8194',\n//             route: `${origin} → ${destination}`,\n//             stops: 0,\n//             aircraft: 'B737',\n//             source: 'Fallback Data',\n//             scraped: false,\n//             bookingUrl: generateBookingUrl({ airline: 'SpiceJet' }, origin, destination, searchDate)\n//           }\n//         ];\n//         setResults(fallbackResults);\n//         setAiAnalysis('Using cached flight data. For real-time prices and availability, please click \"Book Now\" on your preferred flight.');\n//       }\n//     }, 10000); // 10 second timeout\n//   };\n\n//   const handleBookFlight = (flight: FlightResult) => {\n//     if (flight.bookingUrl) {\n//       // Open booking URL in new tab\n//       window.open(flight.bookingUrl, '_blank', 'noopener,noreferrer');\n\n//       // Send booking analytics to AI\n//       if (isConnected) {\n//         sendMessage(`User selected ${flight.airline} flight ${flight.flightNumber} for ${flight.price} from ${origin} to ${destination}`);\n//       }\n//     } else {\n//       alert('Booking URL not available for this flight. Please visit the airline website directly.');\n//     }\n//   };\n\n//   const getFlightStatusColor = (flight: FlightResult) => {\n//     if (flight.scraped) {\n//       return '#10b981'; // Green for live data\n//     } else {\n//       return '#f59e0b'; // Orange for fallback data\n//     }\n//   };\n\n//   return (\n//     <div className=\"flight-search\">\n//       <div className=\"page-header\">\n//         <h1>Flight Search</h1>\n//         <p>Real-time flight search with intelligent recommendations</p>\n//         {isConnected && (\n//           <div className=\"ai-status\">\n//             <span className=\"status-dot connected\"></span>\n//             AI Assistant Connected\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Search Form */}\n//       <div className=\"search-form\">\n//         <div className=\"form-grid\">\n//           <div className=\"form-group\">\n//             <label className=\"form-label\">From</label>\n//             <input\n//               type=\"text\"\n//               className=\"form-input\"\n//               placeholder=\"Delhi, Mumbai, Bangalore...\"\n//               value={origin}\n//               onChange={(e) => setOrigin(e.target.value)}\n//               list=\"airports-from\"\n//             />\n//             <datalist id=\"airports-from\">\n//               <option value=\"Delhi\">Delhi (DEL)</option>\n//               <option value=\"Mumbai\">Mumbai (BOM)</option>\n//               <option value=\"Bangalore\">Bangalore (BLR)</option>\n//               <option value=\"Chennai\">Chennai (MAA)</option>\n//               <option value=\"Kolkata\">Kolkata (CCU)</option>\n//               <option value=\"Hyderabad\">Hyderabad (HYD)</option>\n//               <option value=\"Pune\">Pune (PNQ)</option>\n//             </datalist>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label className=\"form-label\">To</label>\n//             <input\n//               type=\"text\"\n//               className=\"form-input\"\n//               placeholder=\"Delhi, Mumbai, Bangalore...\"\n//               value={destination}\n//               onChange={(e) => setDestination(e.target.value)}\n//               list=\"airports-to\"\n//             />\n//             <datalist id=\"airports-to\">\n//               <option value=\"Delhi\">Delhi (DEL)</option>\n//               <option value=\"Mumbai\">Mumbai (BOM)</option>\n//               <option value=\"Bangalore\">Bangalore (BLR)</option>\n//               <option value=\"Chennai\">Chennai (MAA)</option>\n//               <option value=\"Kolkata\">Kolkata (CCU)</option>\n//               <option value=\"Hyderabad\">Hyderabad (HYD)</option>\n//               <option value=\"Pune\">Pune (PNQ)</option>\n//             </datalist>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label className=\"form-label\">Departure Date</label>\n//             <input\n//               type=\"date\"\n//               className=\"form-input\"\n//               value={date}\n//               onChange={(e) => setDate(e.target.value)}\n//               min={new Date().toISOString().split('T')[0]}\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label className=\"form-label\">Passengers</label>\n//             <select\n//               className=\"form-input\"\n//               value={passengers}\n//               onChange={(e) => setPassengers(e.target.value)}\n//             >\n//               {[1,2,3,4,5,6,7,8,9].map(num => (\n//                 <option key={num} value={num}>{num} {num === 1 ? 'Passenger' : 'Passengers'}</option>\n//               ))}\n//             </select>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label className=\"form-label\">Class</label>\n//             <select\n//               className=\"form-input\"\n//               value={travelClass}\n//               onChange={(e) => setTravelClass(e.target.value)}\n//             >\n//               <option value=\"economy\">Economy</option>\n//               <option value=\"premium-economy\">Premium Economy</option>\n//               <option value=\"business\">Business</option>\n//               <option value=\"first\">First Class</option>\n//             </select>\n//           </div>\n//         </div>\n\n//         <div className=\"search-actions\">\n//           <button\n//             className=\"btn btn-primary search-btn\"\n//             onClick={handleSearch}\n//             disabled={searching || !isConnected}\n//           >\n//             {searching ? (\n//               <>\n//                 <div className=\"spinner-small\"></div>\n//                 Searching...\n//               </>\n//             ) : (\n//               'Search Flights'\n//             )}\n//           </button>\n\n//           {!isConnected && (\n//             <p className=\"connection-warning\">\n//               ⚠️ AI assistant disconnected. Reconnecting...\n//             </p>\n//           )}\n//         </div>\n//       </div>\n\n//       {/* AI Analysis */}\n//       {aiAnalysis && (\n//         <div className=\"ai-analysis\">\n//           <h3>🤖 AI Travel Insights</h3>\n//           <p>{aiAnalysis}</p>\n//         </div>\n//       )}\n\n//       {/* Flight Results */}\n//       {results.length > 0 && (\n//         <div className=\"flight-results\">\n//           <div className=\"results-header\">\n//             <h2>Flight Options</h2>\n//             <p>{results.length} flights found for {origin} → {destination}</p>\n//           </div>\n\n//           <div className=\"flights-grid\">\n//             {results.map((flight, index) => (\n//               <div key={index} className=\"flight-card\">\n//                 <div className=\"flight-header\">\n//                   <div className=\"airline-info\">\n//                     <h3>{flight.airline}</h3>\n//                     <span className=\"flight-number\">{flight.flightNumber}</span>\n//                   </div>\n//                   <div\n//                     className=\"data-source\"\n//                     style={{ color: getFlightStatusColor(flight) }}\n//                   >\n//                     {flight.scraped ? '🟢 Live Data' : '🟡 Cached Data'}\n//                   </div>\n//                 </div>\n\n//                 <div className=\"flight-details\">\n//                   <div className=\"time-info\">\n//                     <div className=\"departure\">\n//                       <span className=\"time\">{flight.time}</span>\n//                       <span className=\"airport\">{origin}</span>\n//                     </div>\n//                     <div className=\"duration\">\n//                       <span className=\"duration-text\">{flight.duration}</span>\n//                       <div className=\"flight-line\">\n//                         <div className=\"line\"></div>\n//                         <div className=\"plane\">✈️</div>\n//                       </div>\n//                       {flight.stops !== undefined && (\n//                         <span className=\"stops\">\n//                           {flight.stops === 0 ? 'Non-stop' : `${flight.stops} stop${flight.stops > 1 ? 's' : ''}`}\n//                         </span>\n//                       )}\n//                     </div>\n//                     <div className=\"arrival\">\n//                       <span className=\"time\">\n//                         {/* Calculate arrival time */}\n//                         {(() => {\n//                           const [hours, minutes] = flight.time.split(/[:\\s]/);\n//                           const [durationHours, durationMinutes] = flight.duration.match(/\\d+/g) || ['2', '0'];\n//                           const departureTime = new Date();\n//                           departureTime.setHours(parseInt(hours) + (flight.time.includes('PM') && hours !== '12' ? 12 : 0));\n//                           departureTime.setMinutes(parseInt(minutes));\n//                           departureTime.setHours(departureTime.getHours() + parseInt(durationHours));\n//                           departureTime.setMinutes(departureTime.getMinutes() + parseInt(durationMinutes));\n//                           return departureTime.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: true });\n//                         })()}\n//                       </span>\n//                       <span className=\"airport\">{destination}</span>\n//                     </div>\n//                   </div>\n\n//                   {flight.aircraft && (\n//                     <div className=\"aircraft-info\">\n//                       <span>Aircraft: {flight.aircraft}</span>\n//                     </div>\n//                   )}\n//                 </div>\n\n//                 <div className=\"flight-footer\">\n//                   <div className=\"price-section\">\n//                     <span className=\"price\">{flight.price}</span>\n//                     <span className=\"price-note\">per person</span>\n//                   </div>\n\n//                   <button\n//                     className=\"btn btn-success book-btn\"\n//                     onClick={() => handleBookFlight(flight)}\n//                   >\n//                     📅 Book Now\n//                   </button>\n//                 </div>\n\n//                 <div className=\"source-info\">\n//                   <small>Source: {flight.source}</small>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       )}\n\n//       {searching && (\n//         <div className=\"searching-indicator\">\n//           <div className=\"spinner\"></div>\n//           <h3>Searching for the best flights...</h3>\n//           <p>Analyzing real-time prices and availability</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default FlightSearch;\n\n// import React, { useState } from 'react';\n// // import { flightService, FlightResult, FlightSearchParams } from '../services/FlightService';\n// import flightService, { FlightSearchRequest, FlightResult } from '../services/FlightService';\n\n// interface FlightSearchProps {\n//   socket: WebSocket | null;\n//   sendMessage: (message: string) => void;\n//   isConnected: boolean;\n// }\n\n// const FlightSearch: React.FC<FlightSearchProps> = ({ socket, sendMessage, isConnected }) => {\n//   const [searchParams, setSearchParams] = useState<FlightSearchParams>({\n//     origin: '',\n//     destination: '',\n//     departureDate: '',\n//     passengers: 1,\n//     class: 'economy'\n//   });\n\n//   const [flights, setFlights] = useState<FlightResult[]>([]);\n//   const [searching, setSearching] = useState(false);\n//   const [searchFailed, setSearchFailed] = useState(false);\n//   const [errorMessage, setErrorMessage] = useState('');\n\n//   const handleInputChange = (field: keyof FlightSearchParams, value: string | number) => {\n//     setSearchParams(prev => ({\n//       ...prev,\n//       [field]: value\n//     }));\n//   };\n\n//   const handleSearch = async () => {\n//     if (!searchParams.origin || !searchParams.destination) {\n//       alert('Please enter both origin and destination');\n//       return;\n//     }\n\n//     setSearching(true);\n//     setSearchFailed(false);\n//     setErrorMessage('');\n//     setFlights([]);\n\n//     try {\n//       // Send AI message for logging\n//       if (isConnected) {\n//         sendMessage(`Searching flights from ${searchParams.origin} to ${searchParams.destination} on ${searchParams.departureDate}`);\n//       }\n\n//       const results = await flightService.searchFlights(searchParams);\n\n//       if (results.length > 0) {\n//         setFlights(results);\n//         setSearchFailed(false);\n//       } else {\n//         setSearchFailed(true);\n//         setErrorMessage('No flights found. Our flight search services are currently unavailable.');\n//       }\n//     } catch (error) {\n//       console.error('Flight search error:', error);\n//       setSearchFailed(true);\n//       setErrorMessage('Flight search services are temporarily unavailable. Please try again later.');\n//     } finally {\n//       setSearching(false);\n//     }\n//   };\n\n//   const handleSelectFlight = (flight: FlightResult) => {\n//     // Log selection with AI\n//     if (isConnected) {\n//       sendMessage(`User selected ${flight.airline} flight ${flight.flightNumber} for ₹${flight.price}`);\n//     }\n\n//     // Open booking URL\n//     window.open(flight.bookingUrl, '_blank', 'noopener,noreferrer');\n//   };\n\n//   const openSkyscanner = () => {\n//     const skyscannerUrl = `https://www.skyscanner.co.in/transport/flights/${searchParams.origin}/${searchParams.destination}/${searchParams.departureDate?.replace(/-/g, '')}/?adults=${searchParams.passengers}&children=0&adultsv2=${searchParams.passengers}&childrenv2=&infants=0&cabinclass=${searchParams.class}&rtn=0`;\n//     window.open(skyscannerUrl, '_blank', 'noopener,noreferrer');\n//   };\n\n//   return (\n//     <div className=\"flight-search\">\n//       <div className=\"page-header\">\n//         <h1>✈️ AI Flight Search</h1>\n//         <p>Find the best flights with real-time data and AI assistance</p>\n//       </div>\n\n//       {/* Search Form */}\n//       <div className=\"search-form\">\n//         <div className=\"form-grid\">\n//           <div className=\"form-group\">\n//             <label>From</label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Delhi, Mumbai, Bangalore...\"\n//               value={searchParams.origin}\n//               onChange={(e) => handleInputChange('origin', e.target.value)}\n//               className=\"form-input\"\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>To</label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Mumbai, Chennai, Hyderabad...\"\n//               value={searchParams.destination}\n//               onChange={(e) => handleInputChange('destination', e.target.value)}\n//               className=\"form-input\"\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Departure Date</label>\n//             <input\n//               type=\"date\"\n//               value={searchParams.departureDate}\n//               onChange={(e) => handleInputChange('departureDate', e.target.value)}\n//               className=\"form-input\"\n//               min={new Date().toISOString().split('T')[0]}\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Passengers</label>\n//             <select\n//               value={searchParams.passengers}\n//               onChange={(e) => handleInputChange('passengers', parseInt(e.target.value))}\n//               className=\"form-input\"\n//             >\n//               {[1,2,3,4,5,6].map(num => (\n//                 <option key={num} value={num}>{num} {num === 1 ? 'Adult' : 'Adults'}</option>\n//               ))}\n//             </select>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Class</label>\n//             <select\n//               value={searchParams.class}\n//               onChange={(e) => handleInputChange('class', e.target.value)}\n//               className=\"form-input\"\n//             >\n//               <option value=\"economy\">Economy</option>\n//               <option value=\"business\">Business</option>\n//               <option value=\"first\">First Class</option>\n//             </select>\n//           </div>\n//         </div>\n\n//         <div className=\"search-actions\">\n//           <button\n//             className=\"btn btn-primary\"\n//             onClick={handleSearch}\n//             disabled={searching || !searchParams.origin || !searchParams.destination}\n//           >\n//             {searching ? '🔍 Searching...' : '🔍 Search Flights'}\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Search Results */}\n//       {searching && (\n//         <div className=\"search-status\">\n//           <div className=\"spinner\"></div>\n//           <p>Searching for the best flights...</p>\n//           <small>Checking multiple sources for real-time prices</small>\n//         </div>\n//       )}\n\n//       {searchFailed && (\n//         <div className=\"search-failed\">\n//           <div className=\"error-message\">\n//             <h3>🚫 Flight Search Unavailable</h3>\n//             <p>{errorMessage}</p>\n//             <p>Our real-time flight search is temporarily unavailable. You can search directly on Skyscanner:</p>\n\n//             <button className=\"btn btn-skyscanner\" onClick={openSkyscanner}>\n//               🔗 Search on Skyscanner\n//             </button>\n//           </div>\n//         </div>\n//       )}\n\n//       {flights.length > 0 && (\n//         <div className=\"flight-results\">\n//           <div className=\"results-header\">\n//             <h3>✈️ Available Flights</h3>\n//             <p>Found {flights.length} flights • Real-time prices</p>\n//           </div>\n\n//           <div className=\"flights-list\">\n//             {flights.map((flight, index) => (\n//               <div key={flight.id} className=\"flight-card\">\n//                 <div className=\"flight-info\">\n//                   <div className=\"airline-section\">\n//                     <h4>{flight.airline}</h4>\n//                     <span className=\"flight-number\">{flight.flightNumber}</span>\n//                     <span className={`source-badge ${flight.source}`}>\n//                       {flight.source === 'serpapi' ? 'Live Data' :\n//                        flight.source === 'scraping' ? 'Real-time' : 'Cached'}\n//                     </span>\n//                   </div>\n\n//                   <div className=\"time-section\">\n//                     <div className=\"time-info\">\n//                       <span className=\"time\">{flight.departureTime}</span>\n//                       <span className=\"airport\">{searchParams.origin}</span>\n//                     </div>\n//                     <div className=\"flight-path\">\n//                       <span className=\"duration\">{flight.duration}</span>\n//                       <div className=\"path-line\">\n//                         {flight.stops === 0 ? (\n//                           <span className=\"direct\">Direct</span>\n//                         ) : (\n//                           <span className=\"stops\">{flight.stops} stop{flight.stops > 1 ? 's' : ''}</span>\n//                         )}\n//                       </div>\n//                     </div>\n//                     <div className=\"time-info\">\n//                       <span className=\"time\">{flight.arrivalTime}</span>\n//                       <span className=\"airport\">{searchParams.destination}</span>\n//                     </div>\n//                   </div>\n\n//                   <div className=\"price-section\">\n//                     <div className=\"price\">{flight.price}</div>\n//                     <button\n//                       className=\"btn btn-select\"\n//                       onClick={() => handleSelectFlight(flight)}\n//                     >\n//                       Select Flight →\n//                     </button>\n//                   </div>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n\n//           <div className=\"search-alternatives\">\n//             <p>Want more options?</p>\n//             <button className=\"btn btn-secondary\" onClick={openSkyscanner}>\n//               🔗 View more on Skyscanner\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default FlightSearch;\nimport React, { useState } from 'react';\nimport { flightService } from '../services/FlightService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlightSearch = ({\n  socket,\n  sendMessage,\n  isConnected\n}) => {\n  _s();\n  const [searchParams, setSearchParams] = useState({\n    origin: '',\n    destination: '',\n    departureDate: '',\n    returnDate: '',\n    passengers: 1,\n    tripType: 'one-way'\n  });\n  const [searchState, setSearchState] = useState({\n    loading: false,\n    error: '',\n    flights: [],\n    searchPerformed: false\n  });\n  const popularRoutes = [{\n    from: 'Delhi',\n    to: 'Mumbai',\n    code: 'DEL-BOM'\n  }, {\n    from: 'Bangalore',\n    to: 'Chennai',\n    code: 'BLR-MAA'\n  }, {\n    from: 'Mumbai',\n    to: 'Goa',\n    code: 'BOM-GOI'\n  }, {\n    from: 'Delhi',\n    to: 'Bangalore',\n    code: 'DEL-BLR'\n  }];\n  const handleInputChange = (field, value) => {\n    setSearchParams(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleSearch = async () => {\n    if (!searchParams.origin || !searchParams.destination || !searchParams.departureDate) {\n      setSearchState(prev => ({\n        ...prev,\n        error: 'Please fill in all required fields'\n      }));\n      return;\n    }\n    setSearchState(prev => ({\n      ...prev,\n      loading: true,\n      error: '',\n      searchPerformed: false\n    }));\n    try {\n      const searchRequest = {\n        origin: searchParams.origin,\n        destination: searchParams.destination,\n        date: searchParams.departureDate,\n        passengers: searchParams.passengers || 1\n      };\n      const results = await flightService.searchFlights(searchRequest);\n      setSearchState(prev => ({\n        ...prev,\n        loading: false,\n        flights: results,\n        searchPerformed: true,\n        error: results.length === 0 ? 'No flights found for your search criteria' : ''\n      }));\n      if (sendMessage && isConnected && socket) {\n        sendMessage(`Searched flights from ${searchParams.origin} to ${searchParams.destination} on ${searchParams.departureDate}. Found ${results.length} options.`);\n      }\n    } catch (error) {\n      console.error('Flight search error:', error);\n      setSearchState(prev => ({\n        ...prev,\n        loading: false,\n        error: error.message || 'Failed to search flights. Please try again.',\n        searchPerformed: true\n      }));\n    }\n  };\n  const handleQuickSearch = route => {\n    setSearchParams(prev => ({\n      ...prev,\n      origin: route.from,\n      destination: route.to\n    }));\n  };\n  const formatPrice = price => {\n    if (price.includes('₹')) return price;\n    return `₹${price}`;\n  };\n  const getTomorrowDate = () => {\n    const tomorrow = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    return tomorrow.toISOString().split('T')[0];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flight-search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDEEB Flight Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Find the best flights for your business travel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Trip Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: searchParams.tripType,\n            onChange: e => handleInputChange('tripType', e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"one-way\",\n              children: \"One Way\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"round-trip\",\n              children: \"Round Trip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 818,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Passengers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: searchParams.passengers,\n            onChange: e => handleInputChange('passengers', parseInt(e.target.value)),\n            children: [1, 2, 3, 4, 5, 6, 7, 8, 9].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: num,\n              children: [num, \" Passenger\", num > 1 ? 's' : '']\n            }, num, true, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"From *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Origin city\",\n            value: searchParams.origin,\n            onChange: e => handleInputChange('origin', e.target.value),\n            list: \"cities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"To *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Destination city\",\n            value: searchParams.destination,\n            onChange: e => handleInputChange('destination', e.target.value),\n            list: \"cities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Departure Date *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 853,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: searchParams.departureDate,\n            onChange: e => handleInputChange('departureDate', e.target.value),\n            min: getTomorrowDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 11\n        }, this), searchParams.tripType === 'round-trip' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Return Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: searchParams.returnDate,\n            onChange: e => handleInputChange('returnDate', e.target.value),\n            min: searchParams.departureDate || getTomorrowDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-select\",\n          onClick: handleSearch,\n          disabled: searchState.loading,\n          children: searchState.loading ? '🔍 Searching...' : '🔍 Search Flights'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quick-routes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Popular Routes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"route-buttons\",\n        children: popularRoutes.map((route, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"route-button\",\n          onClick: () => handleQuickSearch(route),\n          children: [route.from, \" \\u2192 \", route.to]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 7\n    }, this), searchState.error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-failed\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u26A0\\uFE0F \", searchState.error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 9\n    }, this), searchState.loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Searching for the best flights...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 9\n    }, this), searchState.searchPerformed && searchState.flights.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flight-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u2708\\uFE0F Available Flights (\", searchState.flights.length, \" found)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flights-list\",\n        children: searchState.flights.map((flight, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flight-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flight-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"airline-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: flight.airline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 929,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"flight-number\",\n                children: [\"Flight \", flight.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 930,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `source-badge ${flight.source === 'serpapi' ? 'serpapi' : 'scraping'}`,\n                children: flight.source\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 931,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time\",\n                  children: flight.departure_time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 938,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"airport\",\n                  children: searchParams.origin\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 939,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 937,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flight-path\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"duration\",\n                  children: flight.duration\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 942,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"path-line\",\n                  children: flight.stops === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"direct\",\n                    children: \"Direct\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 945,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stops\",\n                    children: [flight.stops, \" stop\", flight.stops > 1 ? 's' : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 947,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 943,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 941,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time\",\n                  children: flight.arrival_time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 952,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"airport\",\n                  children: searchParams.destination\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 953,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 951,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"price-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"price\",\n                children: formatPrice(flight.price)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 958,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-select\",\n                onClick: () => window.open(flight.bookingUrl, '_blank'),\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 957,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 17\n          }, this)\n        }, flight.id || index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-alternatives\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Can't find what you're looking for?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-skyscanner\",\n          onClick: () => window.open(`https://www.skyscanner.co.in/transport/flights/${searchParams.origin}/${searchParams.destination}/${searchParams.departureDate}`, '_blank'),\n          children: \"Search on Skyscanner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 971,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 9\n    }, this), searchState.searchPerformed && searchState.flights.length === 0 && !searchState.loading && !searchState.error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No flights found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 986,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Try adjusting your search criteria or check back later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 985,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: \"cities\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Delhi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 993,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Mumbai\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 994,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Bangalore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 995,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Chennai\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Hyderabad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Kolkata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 998,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Pune\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Ahmedabad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Goa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1001,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Kochi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Jaipur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 992,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 802,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightSearch, \"vaXk1YnrH6E5iffRQGOORAUe7yQ=\");\n_c = FlightSearch;\nexport default FlightSearch;\nvar _c;\n$RefreshReg$(_c, \"FlightSearch\");","map":{"version":3,"names":["React","useState","flightService","jsxDEV","_jsxDEV","FlightSearch","socket","sendMessage","isConnected","_s","searchParams","setSearchParams","origin","destination","departureDate","returnDate","passengers","tripType","searchState","setSearchState","loading","error","flights","searchPerformed","popularRoutes","from","to","code","handleInputChange","field","value","prev","handleSearch","searchRequest","date","results","searchFlights","length","console","message","handleQuickSearch","route","formatPrice","price","includes","getTomorrowDate","tomorrow","Date","setDate","getDate","toISOString","split","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","parseInt","map","num","type","placeholder","list","min","onClick","disabled","index","flight","airline","id","source","departure_time","duration","stops","arrival_time","window","open","bookingUrl","_c","$RefreshReg$"],"sources":["D:/Navikenz/pro/navihire/frontend/src/components/FlightSearch.tsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// interface FlightSearchProps {\r\n//   socket: WebSocket | null;\r\n//   sendMessage: (message: string) => void;\r\n//   isConnected: boolean;\r\n// }\r\n\r\n// interface FlightResult {\r\n//   airline: string;\r\n//   price: string;\r\n//   time: string;\r\n//   duration: string;\r\n//   flightNumber: string;\r\n//   route: string;\r\n//   bookingUrl?: string;\r\n//   stops?: number;\r\n//   aircraft?: string;\r\n//   source: string;\r\n//   scraped: boolean;\r\n// }\r\n\r\n// const FlightSearch: React.FC<FlightSearchProps> = ({ socket, sendMessage, isConnected }) => {\r\n//   const [origin, setOrigin] = useState('');\r\n//   const [destination, setDestination] = useState('');\r\n//   const [date, setDate] = useState('');\r\n//   const [passengers, setPassengers] = useState('1');\r\n//   const [travelClass, setTravelClass] = useState('economy');\r\n//   const [searching, setSearching] = useState(false);\r\n//   const [results, setResults] = useState<FlightResult[]>([]);\r\n//   const [searchId, setSearchId] = useState('');\r\n//   const [aiAnalysis, setAiAnalysis] = useState('');\r\n\r\n//   // Listen for WebSocket messages\r\n//   useEffect(() => {\r\n//     if (socket) {\r\n//       const handleMessage = (event: MessageEvent) => {\r\n//         try {\r\n//           const data = JSON.parse(event.data);\r\n\r\n//           if (data.type === 'message' && data.agent_used === 'flight_agent') {\r\n//             setSearching(false);\r\n\r\n//             // Parse flight results from AI response\r\n//             if (data.flight_results && data.flight_results.length > 0) {\r\n//               const enhancedResults = data.flight_results.map((flight: any, index: number) => ({\r\n//                 ...flight,\r\n//                 bookingUrl: generateBookingUrl(flight, origin, destination, date),\r\n//                 flightNumber: flight.flight_number || `${flight.airline.substring(0, 2).toUpperCase()}-${Math.floor(Math.random() * 900) + 100}`\r\n//               }));\r\n//               setResults(enhancedResults);\r\n//             }\r\n\r\n//             // Set AI analysis\r\n//             if (data.ai_analysis) {\r\n//               setAiAnalysis(data.ai_analysis);\r\n//             }\r\n\r\n//             // Handle screenshot if available\r\n//             if (data.screenshot_path) {\r\n//               console.log('Screenshot available:', data.screenshot_path);\r\n//             }\r\n//           }\r\n//         } catch (error) {\r\n//           console.error('Error parsing WebSocket message:', error);\r\n//         }\r\n//       };\r\n\r\n//       socket.addEventListener('message', handleMessage);\r\n//       return () => socket.removeEventListener('message', handleMessage);\r\n//     }\r\n//   }, [socket, origin, destination, date]);\r\n\r\n//   const generateBookingUrl = (flight: any, origin: string, destination: string, date: string) => {\r\n//     const airline = flight.airline.toLowerCase();\r\n\r\n//     // Generate booking URLs based on airline\r\n//     if (airline.includes('indigo')) {\r\n//       return `https://www.goindigo.in/booking/flight-select?origin=${origin}&destination=${destination}&departure=${date}&passengers=${passengers}&class=${travelClass}`;\r\n//     } else if (airline.includes('air india')) {\r\n//       return `https://www.airindia.in/booking?from=${origin}&to=${destination}&date=${date}&pax=${passengers}&class=${travelClass}`;\r\n//     } else if (airline.includes('spicejet')) {\r\n//       return `https://www.spicejet.com/flight-booking?origin=${origin}&destination=${destination}&departure=${date}&passengers=${passengers}`;\r\n//     } else if (airline.includes('vistara')) {\r\n//       return `https://www.airvistara.com/booking/flight-search?origin=${origin}&destination=${destination}&date=${date}&passengers=${passengers}`;\r\n//     } else {\r\n//       // Generic booking URL for other airlines\r\n//       return `https://www.makemytrip.com/flight/search?itinerary=${origin}-${destination}-${date}&tripType=O&paxType=A-${passengers}_C-0_I-0&intl=false&class=${travelClass.toUpperCase()}`;\r\n//     }\r\n//   };\r\n\r\n//   const handleSearch = async () => {\r\n//     if (!origin || !destination) {\r\n//       alert('Please enter both origin and destination');\r\n//       return;\r\n//     }\r\n\r\n//     if (!isConnected) {\r\n//       alert('AI assistant is not connected. Please wait for connection.');\r\n//       return;\r\n//     }\r\n\r\n//     setSearching(true);\r\n//     setResults([]);\r\n//     setAiAnalysis('');\r\n\r\n//     const currentSearchId = Date.now().toString();\r\n//     setSearchId(currentSearchId);\r\n\r\n//     // Format date for AI\r\n//     const searchDate = date || new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\r\n\r\n//     // Send comprehensive search request to AI\r\n//     const searchQuery = `Search flights from ${origin} to ${destination} on ${searchDate} for ${passengers} passenger(s) in ${travelClass} class. Please provide real-time flight options with prices, timings, and booking recommendations.`;\r\n\r\n//     sendMessage(searchQuery);\r\n\r\n//     // Fallback timeout in case AI doesn't respond\r\n//     setTimeout(() => {\r\n//       if (searching) {\r\n//         setSearching(false);\r\n//         // Provide fallback data if AI doesn't respond\r\n//         const fallbackResults: FlightResult[] = [\r\n//           {\r\n//             airline: 'IndiGo',\r\n//             price: '₹8,500',\r\n//             time: '08:30 AM',\r\n//             duration: '2h 15m',\r\n//             flightNumber: '6E-234',\r\n//             route: `${origin} → ${destination}`,\r\n//             stops: 0,\r\n//             aircraft: 'A320',\r\n//             source: 'Fallback Data',\r\n//             scraped: false,\r\n//             bookingUrl: generateBookingUrl({ airline: 'IndiGo' }, origin, destination, searchDate)\r\n//           },\r\n//           {\r\n//             airline: 'Air India',\r\n//             price: '₹12,200',\r\n//             time: '02:15 PM',\r\n//             duration: '2h 30m',\r\n//             flightNumber: 'AI-131',\r\n//             route: `${origin} → ${destination}`,\r\n//             stops: 0,\r\n//             aircraft: 'A321',\r\n//             source: 'Fallback Data',\r\n//             scraped: false,\r\n//             bookingUrl: generateBookingUrl({ airline: 'Air India' }, origin, destination, searchDate)\r\n//           },\r\n//           {\r\n//             airline: 'SpiceJet',\r\n//             price: '₹7,800',\r\n//             time: '06:45 PM',\r\n//             duration: '2h 20m',\r\n//             flightNumber: 'SG-8194',\r\n//             route: `${origin} → ${destination}`,\r\n//             stops: 0,\r\n//             aircraft: 'B737',\r\n//             source: 'Fallback Data',\r\n//             scraped: false,\r\n//             bookingUrl: generateBookingUrl({ airline: 'SpiceJet' }, origin, destination, searchDate)\r\n//           }\r\n//         ];\r\n//         setResults(fallbackResults);\r\n//         setAiAnalysis('Using cached flight data. For real-time prices and availability, please click \"Book Now\" on your preferred flight.');\r\n//       }\r\n//     }, 10000); // 10 second timeout\r\n//   };\r\n\r\n//   const handleBookFlight = (flight: FlightResult) => {\r\n//     if (flight.bookingUrl) {\r\n//       // Open booking URL in new tab\r\n//       window.open(flight.bookingUrl, '_blank', 'noopener,noreferrer');\r\n\r\n//       // Send booking analytics to AI\r\n//       if (isConnected) {\r\n//         sendMessage(`User selected ${flight.airline} flight ${flight.flightNumber} for ${flight.price} from ${origin} to ${destination}`);\r\n//       }\r\n//     } else {\r\n//       alert('Booking URL not available for this flight. Please visit the airline website directly.');\r\n//     }\r\n//   };\r\n\r\n//   const getFlightStatusColor = (flight: FlightResult) => {\r\n//     if (flight.scraped) {\r\n//       return '#10b981'; // Green for live data\r\n//     } else {\r\n//       return '#f59e0b'; // Orange for fallback data\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flight-search\">\r\n//       <div className=\"page-header\">\r\n//         <h1>Flight Search</h1>\r\n//         <p>Real-time flight search with intelligent recommendations</p>\r\n//         {isConnected && (\r\n//           <div className=\"ai-status\">\r\n//             <span className=\"status-dot connected\"></span>\r\n//             AI Assistant Connected\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Search Form */}\r\n//       <div className=\"search-form\">\r\n//         <div className=\"form-grid\">\r\n//           <div className=\"form-group\">\r\n//             <label className=\"form-label\">From</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-input\"\r\n//               placeholder=\"Delhi, Mumbai, Bangalore...\"\r\n//               value={origin}\r\n//               onChange={(e) => setOrigin(e.target.value)}\r\n//               list=\"airports-from\"\r\n//             />\r\n//             <datalist id=\"airports-from\">\r\n//               <option value=\"Delhi\">Delhi (DEL)</option>\r\n//               <option value=\"Mumbai\">Mumbai (BOM)</option>\r\n//               <option value=\"Bangalore\">Bangalore (BLR)</option>\r\n//               <option value=\"Chennai\">Chennai (MAA)</option>\r\n//               <option value=\"Kolkata\">Kolkata (CCU)</option>\r\n//               <option value=\"Hyderabad\">Hyderabad (HYD)</option>\r\n//               <option value=\"Pune\">Pune (PNQ)</option>\r\n//             </datalist>\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label className=\"form-label\">To</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-input\"\r\n//               placeholder=\"Delhi, Mumbai, Bangalore...\"\r\n//               value={destination}\r\n//               onChange={(e) => setDestination(e.target.value)}\r\n//               list=\"airports-to\"\r\n//             />\r\n//             <datalist id=\"airports-to\">\r\n//               <option value=\"Delhi\">Delhi (DEL)</option>\r\n//               <option value=\"Mumbai\">Mumbai (BOM)</option>\r\n//               <option value=\"Bangalore\">Bangalore (BLR)</option>\r\n//               <option value=\"Chennai\">Chennai (MAA)</option>\r\n//               <option value=\"Kolkata\">Kolkata (CCU)</option>\r\n//               <option value=\"Hyderabad\">Hyderabad (HYD)</option>\r\n//               <option value=\"Pune\">Pune (PNQ)</option>\r\n//             </datalist>\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label className=\"form-label\">Departure Date</label>\r\n//             <input\r\n//               type=\"date\"\r\n//               className=\"form-input\"\r\n//               value={date}\r\n//               onChange={(e) => setDate(e.target.value)}\r\n//               min={new Date().toISOString().split('T')[0]}\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label className=\"form-label\">Passengers</label>\r\n//             <select\r\n//               className=\"form-input\"\r\n//               value={passengers}\r\n//               onChange={(e) => setPassengers(e.target.value)}\r\n//             >\r\n//               {[1,2,3,4,5,6,7,8,9].map(num => (\r\n//                 <option key={num} value={num}>{num} {num === 1 ? 'Passenger' : 'Passengers'}</option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label className=\"form-label\">Class</label>\r\n//             <select\r\n//               className=\"form-input\"\r\n//               value={travelClass}\r\n//               onChange={(e) => setTravelClass(e.target.value)}\r\n//             >\r\n//               <option value=\"economy\">Economy</option>\r\n//               <option value=\"premium-economy\">Premium Economy</option>\r\n//               <option value=\"business\">Business</option>\r\n//               <option value=\"first\">First Class</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"search-actions\">\r\n//           <button\r\n//             className=\"btn btn-primary search-btn\"\r\n//             onClick={handleSearch}\r\n//             disabled={searching || !isConnected}\r\n//           >\r\n//             {searching ? (\r\n//               <>\r\n//                 <div className=\"spinner-small\"></div>\r\n//                 Searching...\r\n//               </>\r\n//             ) : (\r\n//               'Search Flights'\r\n//             )}\r\n//           </button>\r\n\r\n//           {!isConnected && (\r\n//             <p className=\"connection-warning\">\r\n//               ⚠️ AI assistant disconnected. Reconnecting...\r\n//             </p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* AI Analysis */}\r\n//       {aiAnalysis && (\r\n//         <div className=\"ai-analysis\">\r\n//           <h3>🤖 AI Travel Insights</h3>\r\n//           <p>{aiAnalysis}</p>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Flight Results */}\r\n//       {results.length > 0 && (\r\n//         <div className=\"flight-results\">\r\n//           <div className=\"results-header\">\r\n//             <h2>Flight Options</h2>\r\n//             <p>{results.length} flights found for {origin} → {destination}</p>\r\n//           </div>\r\n\r\n//           <div className=\"flights-grid\">\r\n//             {results.map((flight, index) => (\r\n//               <div key={index} className=\"flight-card\">\r\n//                 <div className=\"flight-header\">\r\n//                   <div className=\"airline-info\">\r\n//                     <h3>{flight.airline}</h3>\r\n//                     <span className=\"flight-number\">{flight.flightNumber}</span>\r\n//                   </div>\r\n//                   <div\r\n//                     className=\"data-source\"\r\n//                     style={{ color: getFlightStatusColor(flight) }}\r\n//                   >\r\n//                     {flight.scraped ? '🟢 Live Data' : '🟡 Cached Data'}\r\n//                   </div>\r\n//                 </div>\r\n\r\n//                 <div className=\"flight-details\">\r\n//                   <div className=\"time-info\">\r\n//                     <div className=\"departure\">\r\n//                       <span className=\"time\">{flight.time}</span>\r\n//                       <span className=\"airport\">{origin}</span>\r\n//                     </div>\r\n//                     <div className=\"duration\">\r\n//                       <span className=\"duration-text\">{flight.duration}</span>\r\n//                       <div className=\"flight-line\">\r\n//                         <div className=\"line\"></div>\r\n//                         <div className=\"plane\">✈️</div>\r\n//                       </div>\r\n//                       {flight.stops !== undefined && (\r\n//                         <span className=\"stops\">\r\n//                           {flight.stops === 0 ? 'Non-stop' : `${flight.stops} stop${flight.stops > 1 ? 's' : ''}`}\r\n//                         </span>\r\n//                       )}\r\n//                     </div>\r\n//                     <div className=\"arrival\">\r\n//                       <span className=\"time\">\r\n//                         {/* Calculate arrival time */}\r\n//                         {(() => {\r\n//                           const [hours, minutes] = flight.time.split(/[:\\s]/);\r\n//                           const [durationHours, durationMinutes] = flight.duration.match(/\\d+/g) || ['2', '0'];\r\n//                           const departureTime = new Date();\r\n//                           departureTime.setHours(parseInt(hours) + (flight.time.includes('PM') && hours !== '12' ? 12 : 0));\r\n//                           departureTime.setMinutes(parseInt(minutes));\r\n//                           departureTime.setHours(departureTime.getHours() + parseInt(durationHours));\r\n//                           departureTime.setMinutes(departureTime.getMinutes() + parseInt(durationMinutes));\r\n//                           return departureTime.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: true });\r\n//                         })()}\r\n//                       </span>\r\n//                       <span className=\"airport\">{destination}</span>\r\n//                     </div>\r\n//                   </div>\r\n\r\n//                   {flight.aircraft && (\r\n//                     <div className=\"aircraft-info\">\r\n//                       <span>Aircraft: {flight.aircraft}</span>\r\n//                     </div>\r\n//                   )}\r\n//                 </div>\r\n\r\n//                 <div className=\"flight-footer\">\r\n//                   <div className=\"price-section\">\r\n//                     <span className=\"price\">{flight.price}</span>\r\n//                     <span className=\"price-note\">per person</span>\r\n//                   </div>\r\n\r\n//                   <button\r\n//                     className=\"btn btn-success book-btn\"\r\n//                     onClick={() => handleBookFlight(flight)}\r\n//                   >\r\n//                     📅 Book Now\r\n//                   </button>\r\n//                 </div>\r\n\r\n//                 <div className=\"source-info\">\r\n//                   <small>Source: {flight.source}</small>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {searching && (\r\n//         <div className=\"searching-indicator\">\r\n//           <div className=\"spinner\"></div>\r\n//           <h3>Searching for the best flights...</h3>\r\n//           <p>Analyzing real-time prices and availability</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FlightSearch;\r\n\r\n// import React, { useState } from 'react';\r\n// // import { flightService, FlightResult, FlightSearchParams } from '../services/FlightService';\r\n// import flightService, { FlightSearchRequest, FlightResult } from '../services/FlightService';\r\n\r\n// interface FlightSearchProps {\r\n//   socket: WebSocket | null;\r\n//   sendMessage: (message: string) => void;\r\n//   isConnected: boolean;\r\n// }\r\n\r\n// const FlightSearch: React.FC<FlightSearchProps> = ({ socket, sendMessage, isConnected }) => {\r\n//   const [searchParams, setSearchParams] = useState<FlightSearchParams>({\r\n//     origin: '',\r\n//     destination: '',\r\n//     departureDate: '',\r\n//     passengers: 1,\r\n//     class: 'economy'\r\n//   });\r\n\r\n//   const [flights, setFlights] = useState<FlightResult[]>([]);\r\n//   const [searching, setSearching] = useState(false);\r\n//   const [searchFailed, setSearchFailed] = useState(false);\r\n//   const [errorMessage, setErrorMessage] = useState('');\r\n\r\n//   const handleInputChange = (field: keyof FlightSearchParams, value: string | number) => {\r\n//     setSearchParams(prev => ({\r\n//       ...prev,\r\n//       [field]: value\r\n//     }));\r\n//   };\r\n\r\n//   const handleSearch = async () => {\r\n//     if (!searchParams.origin || !searchParams.destination) {\r\n//       alert('Please enter both origin and destination');\r\n//       return;\r\n//     }\r\n\r\n//     setSearching(true);\r\n//     setSearchFailed(false);\r\n//     setErrorMessage('');\r\n//     setFlights([]);\r\n\r\n//     try {\r\n//       // Send AI message for logging\r\n//       if (isConnected) {\r\n//         sendMessage(`Searching flights from ${searchParams.origin} to ${searchParams.destination} on ${searchParams.departureDate}`);\r\n//       }\r\n\r\n//       const results = await flightService.searchFlights(searchParams);\r\n\r\n//       if (results.length > 0) {\r\n//         setFlights(results);\r\n//         setSearchFailed(false);\r\n//       } else {\r\n//         setSearchFailed(true);\r\n//         setErrorMessage('No flights found. Our flight search services are currently unavailable.');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Flight search error:', error);\r\n//       setSearchFailed(true);\r\n//       setErrorMessage('Flight search services are temporarily unavailable. Please try again later.');\r\n//     } finally {\r\n//       setSearching(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleSelectFlight = (flight: FlightResult) => {\r\n//     // Log selection with AI\r\n//     if (isConnected) {\r\n//       sendMessage(`User selected ${flight.airline} flight ${flight.flightNumber} for ₹${flight.price}`);\r\n//     }\r\n\r\n//     // Open booking URL\r\n//     window.open(flight.bookingUrl, '_blank', 'noopener,noreferrer');\r\n//   };\r\n\r\n//   const openSkyscanner = () => {\r\n//     const skyscannerUrl = `https://www.skyscanner.co.in/transport/flights/${searchParams.origin}/${searchParams.destination}/${searchParams.departureDate?.replace(/-/g, '')}/?adults=${searchParams.passengers}&children=0&adultsv2=${searchParams.passengers}&childrenv2=&infants=0&cabinclass=${searchParams.class}&rtn=0`;\r\n//     window.open(skyscannerUrl, '_blank', 'noopener,noreferrer');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flight-search\">\r\n//       <div className=\"page-header\">\r\n//         <h1>✈️ AI Flight Search</h1>\r\n//         <p>Find the best flights with real-time data and AI assistance</p>\r\n//       </div>\r\n\r\n//       {/* Search Form */}\r\n//       <div className=\"search-form\">\r\n//         <div className=\"form-grid\">\r\n//           <div className=\"form-group\">\r\n//             <label>From</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Delhi, Mumbai, Bangalore...\"\r\n//               value={searchParams.origin}\r\n//               onChange={(e) => handleInputChange('origin', e.target.value)}\r\n//               className=\"form-input\"\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label>To</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Mumbai, Chennai, Hyderabad...\"\r\n//               value={searchParams.destination}\r\n//               onChange={(e) => handleInputChange('destination', e.target.value)}\r\n//               className=\"form-input\"\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label>Departure Date</label>\r\n//             <input\r\n//               type=\"date\"\r\n//               value={searchParams.departureDate}\r\n//               onChange={(e) => handleInputChange('departureDate', e.target.value)}\r\n//               className=\"form-input\"\r\n//               min={new Date().toISOString().split('T')[0]}\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label>Passengers</label>\r\n//             <select\r\n//               value={searchParams.passengers}\r\n//               onChange={(e) => handleInputChange('passengers', parseInt(e.target.value))}\r\n//               className=\"form-input\"\r\n//             >\r\n//               {[1,2,3,4,5,6].map(num => (\r\n//                 <option key={num} value={num}>{num} {num === 1 ? 'Adult' : 'Adults'}</option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label>Class</label>\r\n//             <select\r\n//               value={searchParams.class}\r\n//               onChange={(e) => handleInputChange('class', e.target.value)}\r\n//               className=\"form-input\"\r\n//             >\r\n//               <option value=\"economy\">Economy</option>\r\n//               <option value=\"business\">Business</option>\r\n//               <option value=\"first\">First Class</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"search-actions\">\r\n//           <button\r\n//             className=\"btn btn-primary\"\r\n//             onClick={handleSearch}\r\n//             disabled={searching || !searchParams.origin || !searchParams.destination}\r\n//           >\r\n//             {searching ? '🔍 Searching...' : '🔍 Search Flights'}\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Search Results */}\r\n//       {searching && (\r\n//         <div className=\"search-status\">\r\n//           <div className=\"spinner\"></div>\r\n//           <p>Searching for the best flights...</p>\r\n//           <small>Checking multiple sources for real-time prices</small>\r\n//         </div>\r\n//       )}\r\n\r\n//       {searchFailed && (\r\n//         <div className=\"search-failed\">\r\n//           <div className=\"error-message\">\r\n//             <h3>🚫 Flight Search Unavailable</h3>\r\n//             <p>{errorMessage}</p>\r\n//             <p>Our real-time flight search is temporarily unavailable. You can search directly on Skyscanner:</p>\r\n\r\n//             <button className=\"btn btn-skyscanner\" onClick={openSkyscanner}>\r\n//               🔗 Search on Skyscanner\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {flights.length > 0 && (\r\n//         <div className=\"flight-results\">\r\n//           <div className=\"results-header\">\r\n//             <h3>✈️ Available Flights</h3>\r\n//             <p>Found {flights.length} flights • Real-time prices</p>\r\n//           </div>\r\n\r\n//           <div className=\"flights-list\">\r\n//             {flights.map((flight, index) => (\r\n//               <div key={flight.id} className=\"flight-card\">\r\n//                 <div className=\"flight-info\">\r\n//                   <div className=\"airline-section\">\r\n//                     <h4>{flight.airline}</h4>\r\n//                     <span className=\"flight-number\">{flight.flightNumber}</span>\r\n//                     <span className={`source-badge ${flight.source}`}>\r\n//                       {flight.source === 'serpapi' ? 'Live Data' :\r\n//                        flight.source === 'scraping' ? 'Real-time' : 'Cached'}\r\n//                     </span>\r\n//                   </div>\r\n\r\n//                   <div className=\"time-section\">\r\n//                     <div className=\"time-info\">\r\n//                       <span className=\"time\">{flight.departureTime}</span>\r\n//                       <span className=\"airport\">{searchParams.origin}</span>\r\n//                     </div>\r\n//                     <div className=\"flight-path\">\r\n//                       <span className=\"duration\">{flight.duration}</span>\r\n//                       <div className=\"path-line\">\r\n//                         {flight.stops === 0 ? (\r\n//                           <span className=\"direct\">Direct</span>\r\n//                         ) : (\r\n//                           <span className=\"stops\">{flight.stops} stop{flight.stops > 1 ? 's' : ''}</span>\r\n//                         )}\r\n//                       </div>\r\n//                     </div>\r\n//                     <div className=\"time-info\">\r\n//                       <span className=\"time\">{flight.arrivalTime}</span>\r\n//                       <span className=\"airport\">{searchParams.destination}</span>\r\n//                     </div>\r\n//                   </div>\r\n\r\n//                   <div className=\"price-section\">\r\n//                     <div className=\"price\">{flight.price}</div>\r\n//                     <button\r\n//                       className=\"btn btn-select\"\r\n//                       onClick={() => handleSelectFlight(flight)}\r\n//                     >\r\n//                       Select Flight →\r\n//                     </button>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n\r\n//           <div className=\"search-alternatives\">\r\n//             <p>Want more options?</p>\r\n//             <button className=\"btn btn-secondary\" onClick={openSkyscanner}>\r\n//               🔗 View more on Skyscanner\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FlightSearch;\r\nimport React, { useState, useEffect } from 'react';\r\nimport { flightService, FlightSearchRequest, FlightResult } from '../services/FlightService';\r\n\r\ninterface FlightSearchProps {\r\n  socket?: WebSocket | null;\r\n  sendMessage?: (message: string) => void;\r\n  isConnected?: boolean;\r\n}\r\n\r\ninterface FlightSearchParams {\r\n  origin: string;\r\n  destination: string;\r\n  departureDate: string;\r\n  returnDate?: string;\r\n  passengers?: number;\r\n  tripType?: 'one-way' | 'round-trip';\r\n}\r\n\r\ninterface FlightSearchState {\r\n  loading: boolean;\r\n  error: string;\r\n  flights: FlightResult[];\r\n  searchPerformed: boolean;\r\n}\r\n\r\nconst FlightSearch: React.FC<FlightSearchProps> = ({ socket, sendMessage, isConnected }) => {\r\n  const [searchParams, setSearchParams] = useState<FlightSearchParams>({\r\n    origin: '',\r\n    destination: '',\r\n    departureDate: '',\r\n    returnDate: '',\r\n    passengers: 1,\r\n    tripType: 'one-way'\r\n  });\r\n\r\n  const [searchState, setSearchState] = useState<FlightSearchState>({\r\n    loading: false,\r\n    error: '',\r\n    flights: [],\r\n    searchPerformed: false\r\n  });\r\n\r\n  const popularRoutes = [\r\n    { from: 'Delhi', to: 'Mumbai', code: 'DEL-BOM' },\r\n    { from: 'Bangalore', to: 'Chennai', code: 'BLR-MAA' },\r\n    { from: 'Mumbai', to: 'Goa', code: 'BOM-GOI' },\r\n    { from: 'Delhi', to: 'Bangalore', code: 'DEL-BLR' }\r\n  ];\r\n\r\n  const handleInputChange = (field: keyof FlightSearchParams, value: string | number) => {\r\n    setSearchParams(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!searchParams.origin || !searchParams.destination || !searchParams.departureDate) {\r\n      setSearchState(prev => ({\r\n        ...prev,\r\n        error: 'Please fill in all required fields'\r\n      }));\r\n      return;\r\n    }\r\n\r\n    setSearchState(prev => ({\r\n      ...prev,\r\n      loading: true,\r\n      error: '',\r\n      searchPerformed: false\r\n    }));\r\n\r\n    try {\r\n      const searchRequest: FlightSearchRequest = {\r\n        origin: searchParams.origin,\r\n        destination: searchParams.destination,\r\n        date: searchParams.departureDate,\r\n        passengers: searchParams.passengers || 1\r\n      };\r\n\r\n      const results = await flightService.searchFlights(searchRequest);\r\n      \r\n      setSearchState(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        flights: results,\r\n        searchPerformed: true,\r\n        error: results.length === 0 ? 'No flights found for your search criteria' : ''\r\n      }));\r\n\r\n      if (sendMessage && isConnected && socket) {\r\n        sendMessage(`Searched flights from ${searchParams.origin} to ${searchParams.destination} on ${searchParams.departureDate}. Found ${results.length} options.`);\r\n      }\r\n\r\n    } catch (error: any) {\r\n      console.error('Flight search error:', error);\r\n      setSearchState(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        error: error.message || 'Failed to search flights. Please try again.',\r\n        searchPerformed: true\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleQuickSearch = (route: typeof popularRoutes[0]) => {\r\n    setSearchParams(prev => ({\r\n      ...prev,\r\n      origin: route.from,\r\n      destination: route.to\r\n    }));\r\n  };\r\n\r\n  const formatPrice = (price: string) => {\r\n    if (price.includes('₹')) return price;\r\n    return `₹${price}`;\r\n  };\r\n\r\n  const getTomorrowDate = () => {\r\n    const tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    return tomorrow.toISOString().split('T')[0];\r\n  };\r\n\r\n  return (\r\n    <div className=\"flight-search\">\r\n      <div className=\"search-header\">\r\n        <h2>🛫 Flight Search</h2>\r\n        <p>Find the best flights for your business travel</p>\r\n      </div>\r\n\r\n      {/* Search Form */}\r\n      <div className=\"search-form\">\r\n        <div className=\"form-grid\">\r\n          <div className=\"form-group\">\r\n            <label>Trip Type</label>\r\n            <select \r\n              value={searchParams.tripType}\r\n              onChange={(e) => handleInputChange('tripType', e.target.value as 'one-way' | 'round-trip')}\r\n            >\r\n              <option value=\"one-way\">One Way</option>\r\n              <option value=\"round-trip\">Round Trip</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Passengers</label>\r\n            <select \r\n              value={searchParams.passengers}\r\n              onChange={(e) => handleInputChange('passengers', parseInt(e.target.value))}\r\n            >\r\n              {[1,2,3,4,5,6,7,8,9].map(num => (\r\n                <option key={num} value={num}>{num} Passenger{num > 1 ? 's' : ''}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>From *</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Origin city\"\r\n              value={searchParams.origin}\r\n              onChange={(e) => handleInputChange('origin', e.target.value)}\r\n              list=\"cities\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>To *</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Destination city\"\r\n              value={searchParams.destination}\r\n              onChange={(e) => handleInputChange('destination', e.target.value)}\r\n              list=\"cities\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Departure Date *</label>\r\n            <input\r\n              type=\"date\"\r\n              value={searchParams.departureDate}\r\n              onChange={(e) => handleInputChange('departureDate', e.target.value)}\r\n              min={getTomorrowDate()}\r\n            />\r\n          </div>\r\n          {searchParams.tripType === 'round-trip' && (\r\n            <div className=\"form-group\">\r\n              <label>Return Date</label>\r\n              <input\r\n                type=\"date\"\r\n                value={searchParams.returnDate}\r\n                onChange={(e) => handleInputChange('returnDate', e.target.value)}\r\n                min={searchParams.departureDate || getTomorrowDate()}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"search-actions\">\r\n          <button \r\n            className=\"btn-select\"\r\n            onClick={handleSearch}\r\n            disabled={searchState.loading}\r\n          >\r\n            {searchState.loading ? '🔍 Searching...' : '🔍 Search Flights'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick Search Options */}\r\n      <div className=\"quick-routes\">\r\n        <h3>Popular Routes</h3>\r\n        <div className=\"route-buttons\">\r\n          {popularRoutes.map((route, index) => (\r\n            <button\r\n              key={index}\r\n              className=\"route-button\"\r\n              onClick={() => handleQuickSearch(route)}\r\n            >\r\n              {route.from} → {route.to}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Display */}\r\n      {searchState.error && (\r\n        <div className=\"search-failed\">\r\n          <div className=\"error-message\">\r\n            <h3>⚠️ {searchState.error}</h3>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Loading State */}\r\n      {searchState.loading && (\r\n        <div className=\"search-status\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Searching for the best flights...</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Search Results */}\r\n      {searchState.searchPerformed && searchState.flights.length > 0 && (\r\n        <div className=\"flight-results\">\r\n          <div className=\"results-header\">\r\n            <h3>✈️ Available Flights ({searchState.flights.length} found)</h3>\r\n          </div>\r\n          <div className=\"flights-list\">\r\n            {searchState.flights.map((flight, index) => (\r\n              <div key={flight.id || index} className=\"flight-card\">\r\n                <div className=\"flight-info\">\r\n                  <div className=\"airline-section\">\r\n                    <h4>{flight.airline}</h4>\r\n                    <span className=\"flight-number\">Flight {flight.id}</span>\r\n                    <span className={`source-badge ${flight.source === 'serpapi' ? 'serpapi' : 'scraping'}`}>\r\n                      {flight.source}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <div className=\"time-section\">\r\n                    <div className=\"time-info\">\r\n                      <span className=\"time\">{flight.departure_time}</span>\r\n                      <span className=\"airport\">{searchParams.origin}</span>\r\n                    </div>\r\n                    <div className=\"flight-path\">\r\n                      <span className=\"duration\">{flight.duration}</span>\r\n                      <div className=\"path-line\">\r\n                        {flight.stops === 0 ? (\r\n                          <span className=\"direct\">Direct</span>\r\n                        ) : (\r\n                          <span className=\"stops\">{flight.stops} stop{flight.stops > 1 ? 's' : ''}</span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"time-info\">\r\n                      <span className=\"time\">{flight.arrival_time}</span>\r\n                      <span className=\"airport\">{searchParams.destination}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"price-section\">\r\n                    <div className=\"price\">{formatPrice(flight.price)}</div>\r\n                    <button \r\n                      className=\"btn-select\"\r\n                      onClick={() => window.open(flight.bookingUrl, '_blank')}\r\n                    >\r\n                      Select\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          <div className=\"search-alternatives\">\r\n            <p>Can't find what you're looking for?</p>\r\n            <button \r\n              className=\"btn-skyscanner\"\r\n              onClick={() => window.open(`https://www.skyscanner.co.in/transport/flights/${searchParams.origin}/${searchParams.destination}/${searchParams.departureDate}`, '_blank')}\r\n            >\r\n              Search on Skyscanner\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* No Results */}\r\n      {searchState.searchPerformed && searchState.flights.length === 0 && !searchState.loading && !searchState.error && (\r\n        <div className=\"search-status\">\r\n          <h3>No flights found</h3>\r\n          <p>Try adjusting your search criteria or check back later.</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* City suggestions datalist */}\r\n      <datalist id=\"cities\">\r\n        <option value=\"Delhi\" />\r\n        <option value=\"Mumbai\" />\r\n        <option value=\"Bangalore\" />\r\n        <option value=\"Chennai\" />\r\n        <option value=\"Hyderabad\" />\r\n        <option value=\"Kolkata\" />\r\n        <option value=\"Pune\" />\r\n        <option value=\"Ahmedabad\" />\r\n        <option value=\"Goa\" />\r\n        <option value=\"Kochi\" />\r\n        <option value=\"Jaipur\" />\r\n      </datalist>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlightSearch;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}