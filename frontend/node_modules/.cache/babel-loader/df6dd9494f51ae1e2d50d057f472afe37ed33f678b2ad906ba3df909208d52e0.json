{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Add request interceptor for CORS\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: false // Set to false for CORS issues\n});\n\n// Add response interceptor\napi.interceptors.response.use(response => response, error => {\n  if (error.code === 'ECONNABORTED') {\n    console.error('Request timeout');\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","api","axios","create","baseURL","timeout","headers","withCredentials","interceptors","response","use","error","code","console","Promise","reject"],"sources":["D:/Navikenz/pro/navihire/frontend/src/services/api.ts"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n// Add request interceptor for CORS\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n  },\r\n  withCredentials: false, // Set to false for CORS issues\r\n});\r\n\r\n// Add response interceptor\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.code === 'ECONNABORTED') {\r\n      console.error('Request timeout');\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAE7E;AACA,MAAMC,GAAG,GAAGC,KAAK,CAACC,MAAM,CAAC;EACvBC,OAAO,EAAEP,YAAY;EACrBQ,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACZ,CAAC;EACDC,eAAe,EAAE,KAAK,CAAE;AAC1B,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EACT,IAAIA,KAAK,CAACC,IAAI,KAAK,cAAc,EAAE;IACjCC,OAAO,CAACF,KAAK,CAAC,iBAAiB,CAAC;EAClC;EACA,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}