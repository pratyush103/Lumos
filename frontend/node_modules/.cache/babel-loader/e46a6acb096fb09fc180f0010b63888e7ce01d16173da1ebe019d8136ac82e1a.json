{"ast":null,"code":"import _objectSpread from\"C:/Users/piyus/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// import React, { useState, useEffect } from 'react';\n// interface FlightSearchProps {\n//   socket: WebSocket | null;\n//   sendMessage: (message: string) => void;\n//   isConnected: boolean;\n// }\n// interface FlightResult {\n//   airline: string;\n//   price: string;\n//   time: string;\n//   duration: string;\n//   flightNumber: string;\n//   route: string;\n//   bookingUrl?: string;\n//   stops?: number;\n//   aircraft?: string;\n//   source: string;\n//   scraped: boolean;\n// }\n// const FlightSearch: React.FC<FlightSearchProps> = ({ socket, sendMessage, isConnected }) => {\n//   const [origin, setOrigin] = useState('');\n//   const [destination, setDestination] = useState('');\n//   const [date, setDate] = useState('');\n//   const [passengers, setPassengers] = useState('1');\n//   const [travelClass, setTravelClass] = useState('economy');\n//   const [searching, setSearching] = useState(false);\n//   const [results, setResults] = useState<FlightResult[]>([]);\n//   const [searchId, setSearchId] = useState('');\n//   const [aiAnalysis, setAiAnalysis] = useState('');\n//   // Listen for WebSocket messages\n//   useEffect(() => {\n//     if (socket) {\n//       const handleMessage = (event: MessageEvent) => {\n//         try {\n//           const data = JSON.parse(event.data);\n//           if (data.type === 'message' && data.agent_used === 'flight_agent') {\n//             setSearching(false);\n//             // Parse flight results from AI response\n//             if (data.flight_results && data.flight_results.length > 0) {\n//               const enhancedResults = data.flight_results.map((flight: any, index: number) => ({\n//                 ...flight,\n//                 bookingUrl: generateBookingUrl(flight, origin, destination, date),\n//                 flightNumber: flight.flight_number || `${flight.airline.substring(0, 2).toUpperCase()}-${Math.floor(Math.random() * 900) + 100}`\n//               }));\n//               setResults(enhancedResults);\n//             }\n//             // Set AI analysis\n//             if (data.ai_analysis) {\n//               setAiAnalysis(data.ai_analysis);\n//             }\n//             // Handle screenshot if available\n//             if (data.screenshot_path) {\n//               console.log('Screenshot available:', data.screenshot_path);\n//             }\n//           }\n//         } catch (error) {\n//           console.error('Error parsing WebSocket message:', error);\n//         }\n//       };\n//       socket.addEventListener('message', handleMessage);\n//       return () => socket.removeEventListener('message', handleMessage);\n//     }\n//   }, [socket, origin, destination, date]);\n//   const generateBookingUrl = (flight: any, origin: string, destination: string, date: string) => {\n//     const airline = flight.airline.toLowerCase();\n//     // Generate booking URLs based on airline\n//     if (airline.includes('indigo')) {\n//       return `https://www.goindigo.in/booking/flight-select?origin=${origin}&destination=${destination}&departure=${date}&passengers=${passengers}&class=${travelClass}`;\n//     } else if (airline.includes('air india')) {\n//       return `https://www.airindia.in/booking?from=${origin}&to=${destination}&date=${date}&pax=${passengers}&class=${travelClass}`;\n//     } else if (airline.includes('spicejet')) {\n//       return `https://www.spicejet.com/flight-booking?origin=${origin}&destination=${destination}&departure=${date}&passengers=${passengers}`;\n//     } else if (airline.includes('vistara')) {\n//       return `https://www.airvistara.com/booking/flight-search?origin=${origin}&destination=${destination}&date=${date}&passengers=${passengers}`;\n//     } else {\n//       // Generic booking URL for other airlines\n//       return `https://www.makemytrip.com/flight/search?itinerary=${origin}-${destination}-${date}&tripType=O&paxType=A-${passengers}_C-0_I-0&intl=false&class=${travelClass.toUpperCase()}`;\n//     }\n//   };\n//   const handleSearch = async () => {\n//     if (!origin || !destination) {\n//       alert('Please enter both origin and destination');\n//       return;\n//     }\n//     if (!isConnected) {\n//       alert('AI assistant is not connected. Please wait for connection.');\n//       return;\n//     }\n//     setSearching(true);\n//     setResults([]);\n//     setAiAnalysis('');\n//     const currentSearchId = Date.now().toString();\n//     setSearchId(currentSearchId);\n//     // Format date for AI\n//     const searchDate = date || new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n//     // Send comprehensive search request to AI\n//     const searchQuery = `Search flights from ${origin} to ${destination} on ${searchDate} for ${passengers} passenger(s) in ${travelClass} class. Please provide real-time flight options with prices, timings, and booking recommendations.`;\n//     sendMessage(searchQuery);\n//     // Fallback timeout in case AI doesn't respond\n//     setTimeout(() => {\n//       if (searching) {\n//         setSearching(false);\n//         // Provide fallback data if AI doesn't respond\n//         const fallbackResults: FlightResult[] = [\n//           {\n//             airline: 'IndiGo',\n//             price: '₹8,500',\n//             time: '08:30 AM',\n//             duration: '2h 15m',\n//             flightNumber: '6E-234',\n//             route: `${origin} → ${destination}`,\n//             stops: 0,\n//             aircraft: 'A320',\n//             source: 'Fallback Data',\n//             scraped: false,\n//             bookingUrl: generateBookingUrl({ airline: 'IndiGo' }, origin, destination, searchDate)\n//           },\n//           {\n//             airline: 'Air India',\n//             price: '₹12,200',\n//             time: '02:15 PM',\n//             duration: '2h 30m',\n//             flightNumber: 'AI-131',\n//             route: `${origin} → ${destination}`,\n//             stops: 0,\n//             aircraft: 'A321',\n//             source: 'Fallback Data',\n//             scraped: false,\n//             bookingUrl: generateBookingUrl({ airline: 'Air India' }, origin, destination, searchDate)\n//           },\n//           {\n//             airline: 'SpiceJet',\n//             price: '₹7,800',\n//             time: '06:45 PM',\n//             duration: '2h 20m',\n//             flightNumber: 'SG-8194',\n//             route: `${origin} → ${destination}`,\n//             stops: 0,\n//             aircraft: 'B737',\n//             source: 'Fallback Data',\n//             scraped: false,\n//             bookingUrl: generateBookingUrl({ airline: 'SpiceJet' }, origin, destination, searchDate)\n//           }\n//         ];\n//         setResults(fallbackResults);\n//         setAiAnalysis('Using cached flight data. For real-time prices and availability, please click \"Book Now\" on your preferred flight.');\n//       }\n//     }, 10000); // 10 second timeout\n//   };\n//   const handleBookFlight = (flight: FlightResult) => {\n//     if (flight.bookingUrl) {\n//       // Open booking URL in new tab\n//       window.open(flight.bookingUrl, '_blank', 'noopener,noreferrer');\n//       // Send booking analytics to AI\n//       if (isConnected) {\n//         sendMessage(`User selected ${flight.airline} flight ${flight.flightNumber} for ${flight.price} from ${origin} to ${destination}`);\n//       }\n//     } else {\n//       alert('Booking URL not available for this flight. Please visit the airline website directly.');\n//     }\n//   };\n//   const getFlightStatusColor = (flight: FlightResult) => {\n//     if (flight.scraped) {\n//       return '#10b981'; // Green for live data\n//     } else {\n//       return '#f59e0b'; // Orange for fallback data\n//     }\n//   };\n//   return (\n//     <div className=\"flight-search\">\n//       <div className=\"page-header\">\n//         <h1>Flight Search</h1>\n//         <p>Real-time flight search with intelligent recommendations</p>\n//         {isConnected && (\n//           <div className=\"ai-status\">\n//             <span className=\"status-dot connected\"></span>\n//             AI Assistant Connected\n//           </div>\n//         )}\n//       </div>\n//       {/* Search Form */}\n//       <div className=\"search-form\">\n//         <div className=\"form-grid\">\n//           <div className=\"form-group\">\n//             <label className=\"form-label\">From</label>\n//             <input \n//               type=\"text\" \n//               className=\"form-input\"\n//               placeholder=\"Delhi, Mumbai, Bangalore...\"\n//               value={origin}\n//               onChange={(e) => setOrigin(e.target.value)}\n//               list=\"airports-from\"\n//             />\n//             <datalist id=\"airports-from\">\n//               <option value=\"Delhi\">Delhi (DEL)</option>\n//               <option value=\"Mumbai\">Mumbai (BOM)</option>\n//               <option value=\"Bangalore\">Bangalore (BLR)</option>\n//               <option value=\"Chennai\">Chennai (MAA)</option>\n//               <option value=\"Kolkata\">Kolkata (CCU)</option>\n//               <option value=\"Hyderabad\">Hyderabad (HYD)</option>\n//               <option value=\"Pune\">Pune (PNQ)</option>\n//             </datalist>\n//           </div>\n//           <div className=\"form-group\">\n//             <label className=\"form-label\">To</label>\n//             <input \n//               type=\"text\" \n//               className=\"form-input\"\n//               placeholder=\"Delhi, Mumbai, Bangalore...\"\n//               value={destination}\n//               onChange={(e) => setDestination(e.target.value)}\n//               list=\"airports-to\"\n//             />\n//             <datalist id=\"airports-to\">\n//               <option value=\"Delhi\">Delhi (DEL)</option>\n//               <option value=\"Mumbai\">Mumbai (BOM)</option>\n//               <option value=\"Bangalore\">Bangalore (BLR)</option>\n//               <option value=\"Chennai\">Chennai (MAA)</option>\n//               <option value=\"Kolkata\">Kolkata (CCU)</option>\n//               <option value=\"Hyderabad\">Hyderabad (HYD)</option>\n//               <option value=\"Pune\">Pune (PNQ)</option>\n//             </datalist>\n//           </div>\n//           <div className=\"form-group\">\n//             <label className=\"form-label\">Departure Date</label>\n//             <input \n//               type=\"date\" \n//               className=\"form-input\"\n//               value={date}\n//               onChange={(e) => setDate(e.target.value)}\n//               min={new Date().toISOString().split('T')[0]}\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label className=\"form-label\">Passengers</label>\n//             <select \n//               className=\"form-input\"\n//               value={passengers}\n//               onChange={(e) => setPassengers(e.target.value)}\n//             >\n//               {[1,2,3,4,5,6,7,8,9].map(num => (\n//                 <option key={num} value={num}>{num} {num === 1 ? 'Passenger' : 'Passengers'}</option>\n//               ))}\n//             </select>\n//           </div>\n//           <div className=\"form-group\">\n//             <label className=\"form-label\">Class</label>\n//             <select \n//               className=\"form-input\"\n//               value={travelClass}\n//               onChange={(e) => setTravelClass(e.target.value)}\n//             >\n//               <option value=\"economy\">Economy</option>\n//               <option value=\"premium-economy\">Premium Economy</option>\n//               <option value=\"business\">Business</option>\n//               <option value=\"first\">First Class</option>\n//             </select>\n//           </div>\n//         </div>\n//         <div className=\"search-actions\">\n//           <button \n//             className=\"btn btn-primary search-btn\" \n//             onClick={handleSearch}\n//             disabled={searching || !isConnected}\n//           >\n//             {searching ? (\n//               <>\n//                 <div className=\"spinner-small\"></div>\n//                 Searching...\n//               </>\n//             ) : (\n//               'Search Flights'\n//             )}\n//           </button>\n//           {!isConnected && (\n//             <p className=\"connection-warning\">\n//               ⚠️ AI assistant disconnected. Reconnecting...\n//             </p>\n//           )}\n//         </div>\n//       </div>\n//       {/* AI Analysis */}\n//       {aiAnalysis && (\n//         <div className=\"ai-analysis\">\n//           <h3>🤖 AI Travel Insights</h3>\n//           <p>{aiAnalysis}</p>\n//         </div>\n//       )}\n//       {/* Flight Results */}\n//       {results.length > 0 && (\n//         <div className=\"flight-results\">\n//           <div className=\"results-header\">\n//             <h2>Flight Options</h2>\n//             <p>{results.length} flights found for {origin} → {destination}</p>\n//           </div>\n//           <div className=\"flights-grid\">\n//             {results.map((flight, index) => (\n//               <div key={index} className=\"flight-card\">\n//                 <div className=\"flight-header\">\n//                   <div className=\"airline-info\">\n//                     <h3>{flight.airline}</h3>\n//                     <span className=\"flight-number\">{flight.flightNumber}</span>\n//                   </div>\n//                   <div \n//                     className=\"data-source\"\n//                     style={{ color: getFlightStatusColor(flight) }}\n//                   >\n//                     {flight.scraped ? '🟢 Live Data' : '🟡 Cached Data'}\n//                   </div>\n//                 </div>\n//                 <div className=\"flight-details\">\n//                   <div className=\"time-info\">\n//                     <div className=\"departure\">\n//                       <span className=\"time\">{flight.time}</span>\n//                       <span className=\"airport\">{origin}</span>\n//                     </div>\n//                     <div className=\"duration\">\n//                       <span className=\"duration-text\">{flight.duration}</span>\n//                       <div className=\"flight-line\">\n//                         <div className=\"line\"></div>\n//                         <div className=\"plane\">✈️</div>\n//                       </div>\n//                       {flight.stops !== undefined && (\n//                         <span className=\"stops\">\n//                           {flight.stops === 0 ? 'Non-stop' : `${flight.stops} stop${flight.stops > 1 ? 's' : ''}`}\n//                         </span>\n//                       )}\n//                     </div>\n//                     <div className=\"arrival\">\n//                       <span className=\"time\">\n//                         {/* Calculate arrival time */}\n//                         {(() => {\n//                           const [hours, minutes] = flight.time.split(/[:\\s]/);\n//                           const [durationHours, durationMinutes] = flight.duration.match(/\\d+/g) || ['2', '0'];\n//                           const departureTime = new Date();\n//                           departureTime.setHours(parseInt(hours) + (flight.time.includes('PM') && hours !== '12' ? 12 : 0));\n//                           departureTime.setMinutes(parseInt(minutes));\n//                           departureTime.setHours(departureTime.getHours() + parseInt(durationHours));\n//                           departureTime.setMinutes(departureTime.getMinutes() + parseInt(durationMinutes));\n//                           return departureTime.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: true });\n//                         })()}\n//                       </span>\n//                       <span className=\"airport\">{destination}</span>\n//                     </div>\n//                   </div>\n//                   {flight.aircraft && (\n//                     <div className=\"aircraft-info\">\n//                       <span>Aircraft: {flight.aircraft}</span>\n//                     </div>\n//                   )}\n//                 </div>\n//                 <div className=\"flight-footer\">\n//                   <div className=\"price-section\">\n//                     <span className=\"price\">{flight.price}</span>\n//                     <span className=\"price-note\">per person</span>\n//                   </div>\n//                   <button \n//                     className=\"btn btn-success book-btn\"\n//                     onClick={() => handleBookFlight(flight)}\n//                   >\n//                     📅 Book Now\n//                   </button>\n//                 </div>\n//                 <div className=\"source-info\">\n//                   <small>Source: {flight.source}</small>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       )}\n//       {searching && (\n//         <div className=\"searching-indicator\">\n//           <div className=\"spinner\"></div>\n//           <h3>Searching for the best flights...</h3>\n//           <p>Analyzing real-time prices and availability</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n// export default FlightSearch;\nimport React,{useState}from'react';// import { flightService, FlightResult, FlightSearchParams } from '../services/FlightService';\nimport flightService from'../services/FlightService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FlightSearch=_ref=>{let{socket,sendMessage,isConnected}=_ref;const[searchParams,setSearchParams]=useState({origin:'',destination:'',departureDate:'',passengers:1,class:'economy'});const[flights,setFlights]=useState([]);const[searching,setSearching]=useState(false);const[searchFailed,setSearchFailed]=useState(false);const[errorMessage,setErrorMessage]=useState('');const handleInputChange=(field,value)=>{setSearchParams(prev=>_objectSpread(_objectSpread({},prev),{},{[field]:value}));};const handleSearch=async()=>{if(!searchParams.origin||!searchParams.destination){alert('Please enter both origin and destination');return;}setSearching(true);setSearchFailed(false);setErrorMessage('');setFlights([]);try{// Send AI message for logging\nif(isConnected){sendMessage(\"Searching flights from \".concat(searchParams.origin,\" to \").concat(searchParams.destination,\" on \").concat(searchParams.departureDate));}const results=await flightService.searchFlights(searchParams);if(results.length>0){setFlights(results);setSearchFailed(false);}else{setSearchFailed(true);setErrorMessage('No flights found. Our flight search services are currently unavailable.');}}catch(error){console.error('Flight search error:',error);setSearchFailed(true);setErrorMessage('Flight search services are temporarily unavailable. Please try again later.');}finally{setSearching(false);}};const handleSelectFlight=flight=>{// Log selection with AI\nif(isConnected){sendMessage(\"User selected \".concat(flight.airline,\" flight \").concat(flight.flightNumber,\" for \\u20B9\").concat(flight.price));}// Open booking URL\nwindow.open(flight.bookingUrl,'_blank','noopener,noreferrer');};const openSkyscanner=()=>{var _searchParams$departu;const skyscannerUrl=\"https://www.skyscanner.co.in/transport/flights/\".concat(searchParams.origin,\"/\").concat(searchParams.destination,\"/\").concat((_searchParams$departu=searchParams.departureDate)===null||_searchParams$departu===void 0?void 0:_searchParams$departu.replace(/-/g,''),\"/?adults=\").concat(searchParams.passengers,\"&children=0&adultsv2=\").concat(searchParams.passengers,\"&childrenv2=&infants=0&cabinclass=\").concat(searchParams.class,\"&rtn=0\");window.open(skyscannerUrl,'_blank','noopener,noreferrer');};return/*#__PURE__*/_jsxs(\"div\",{className:\"flight-search\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u2708\\uFE0F AI Flight Search\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Find the best flights with real-time data and AI assistance\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"From\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Delhi, Mumbai, Bangalore...\",value:searchParams.origin,onChange:e=>handleInputChange('origin',e.target.value),className:\"form-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"To\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Mumbai, Chennai, Hyderabad...\",value:searchParams.destination,onChange:e=>handleInputChange('destination',e.target.value),className:\"form-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Departure Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:searchParams.departureDate,onChange:e=>handleInputChange('departureDate',e.target.value),className:\"form-input\",min:new Date().toISOString().split('T')[0]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Passengers\"}),/*#__PURE__*/_jsx(\"select\",{value:searchParams.passengers,onChange:e=>handleInputChange('passengers',parseInt(e.target.value)),className:\"form-input\",children:[1,2,3,4,5,6].map(num=>/*#__PURE__*/_jsxs(\"option\",{value:num,children:[num,\" \",num===1?'Adult':'Adults']},num))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Class\"}),/*#__PURE__*/_jsxs(\"select\",{value:searchParams.class,onChange:e=>handleInputChange('class',e.target.value),className:\"form-input\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"economy\",children:\"Economy\"}),/*#__PURE__*/_jsx(\"option\",{value:\"business\",children:\"Business\"}),/*#__PURE__*/_jsx(\"option\",{value:\"first\",children:\"First Class\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"search-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:handleSearch,disabled:searching||!searchParams.origin||!searchParams.destination,children:searching?'🔍 Searching...':'🔍 Search Flights'})})]}),searching&&/*#__PURE__*/_jsxs(\"div\",{className:\"search-status\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Searching for the best flights...\"}),/*#__PURE__*/_jsx(\"small\",{children:\"Checking multiple sources for real-time prices\"})]}),searchFailed&&/*#__PURE__*/_jsx(\"div\",{className:\"search-failed\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDEAB Flight Search Unavailable\"}),/*#__PURE__*/_jsx(\"p\",{children:errorMessage}),/*#__PURE__*/_jsx(\"p\",{children:\"Our real-time flight search is temporarily unavailable. You can search directly on Skyscanner:\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-skyscanner\",onClick:openSkyscanner,children:\"\\uD83D\\uDD17 Search on Skyscanner\"})]})}),flights.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"flight-results\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"results-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u2708\\uFE0F Available Flights\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Found \",flights.length,\" flights \\u2022 Real-time prices\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flights-list\",children:flights.map((flight,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"flight-card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flight-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"airline-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:flight.airline}),/*#__PURE__*/_jsx(\"span\",{className:\"flight-number\",children:flight.flightNumber}),/*#__PURE__*/_jsx(\"span\",{className:\"source-badge \".concat(flight.source),children:flight.source==='serpapi'?'Live Data':flight.source==='scraping'?'Real-time':'Cached'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"time-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"time-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:flight.departureTime}),/*#__PURE__*/_jsx(\"span\",{className:\"airport\",children:searchParams.origin})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flight-path\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"duration\",children:flight.duration}),/*#__PURE__*/_jsx(\"div\",{className:\"path-line\",children:flight.stops===0?/*#__PURE__*/_jsx(\"span\",{className:\"direct\",children:\"Direct\"}):/*#__PURE__*/_jsxs(\"span\",{className:\"stops\",children:[flight.stops,\" stop\",flight.stops>1?'s':'']})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"time-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:flight.arrivalTime}),/*#__PURE__*/_jsx(\"span\",{className:\"airport\",children:searchParams.destination})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"price-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"price\",children:flight.price}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-select\",onClick:()=>handleSelectFlight(flight),children:\"Select Flight \\u2192\"})]})]})},flight.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-alternatives\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Want more options?\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:openSkyscanner,children:\"\\uD83D\\uDD17 View more on Skyscanner\"})]})]})]});};export default FlightSearch;","map":{"version":3,"names":["React","useState","flightService","jsx","_jsx","jsxs","_jsxs","FlightSearch","_ref","socket","sendMessage","isConnected","searchParams","setSearchParams","origin","destination","departureDate","passengers","class","flights","setFlights","searching","setSearching","searchFailed","setSearchFailed","errorMessage","setErrorMessage","handleInputChange","field","value","prev","_objectSpread","handleSearch","alert","concat","results","searchFlights","length","error","console","handleSelectFlight","flight","airline","flightNumber","price","window","open","bookingUrl","openSkyscanner","_searchParams$departu","skyscannerUrl","replace","className","children","type","placeholder","onChange","e","target","min","Date","toISOString","split","parseInt","map","num","onClick","disabled","index","source","departureTime","duration","stops","arrivalTime","id"],"sources":["D:/Navikenz/pro/navihire/frontend/src/components/FlightSearch.tsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// interface FlightSearchProps {\r\n//   socket: WebSocket | null;\r\n//   sendMessage: (message: string) => void;\r\n//   isConnected: boolean;\r\n// }\r\n\r\n// interface FlightResult {\r\n//   airline: string;\r\n//   price: string;\r\n//   time: string;\r\n//   duration: string;\r\n//   flightNumber: string;\r\n//   route: string;\r\n//   bookingUrl?: string;\r\n//   stops?: number;\r\n//   aircraft?: string;\r\n//   source: string;\r\n//   scraped: boolean;\r\n// }\r\n\r\n// const FlightSearch: React.FC<FlightSearchProps> = ({ socket, sendMessage, isConnected }) => {\r\n//   const [origin, setOrigin] = useState('');\r\n//   const [destination, setDestination] = useState('');\r\n//   const [date, setDate] = useState('');\r\n//   const [passengers, setPassengers] = useState('1');\r\n//   const [travelClass, setTravelClass] = useState('economy');\r\n//   const [searching, setSearching] = useState(false);\r\n//   const [results, setResults] = useState<FlightResult[]>([]);\r\n//   const [searchId, setSearchId] = useState('');\r\n//   const [aiAnalysis, setAiAnalysis] = useState('');\r\n\r\n//   // Listen for WebSocket messages\r\n//   useEffect(() => {\r\n//     if (socket) {\r\n//       const handleMessage = (event: MessageEvent) => {\r\n//         try {\r\n//           const data = JSON.parse(event.data);\r\n          \r\n//           if (data.type === 'message' && data.agent_used === 'flight_agent') {\r\n//             setSearching(false);\r\n            \r\n//             // Parse flight results from AI response\r\n//             if (data.flight_results && data.flight_results.length > 0) {\r\n//               const enhancedResults = data.flight_results.map((flight: any, index: number) => ({\r\n//                 ...flight,\r\n//                 bookingUrl: generateBookingUrl(flight, origin, destination, date),\r\n//                 flightNumber: flight.flight_number || `${flight.airline.substring(0, 2).toUpperCase()}-${Math.floor(Math.random() * 900) + 100}`\r\n//               }));\r\n//               setResults(enhancedResults);\r\n//             }\r\n            \r\n//             // Set AI analysis\r\n//             if (data.ai_analysis) {\r\n//               setAiAnalysis(data.ai_analysis);\r\n//             }\r\n            \r\n//             // Handle screenshot if available\r\n//             if (data.screenshot_path) {\r\n//               console.log('Screenshot available:', data.screenshot_path);\r\n//             }\r\n//           }\r\n//         } catch (error) {\r\n//           console.error('Error parsing WebSocket message:', error);\r\n//         }\r\n//       };\r\n\r\n//       socket.addEventListener('message', handleMessage);\r\n//       return () => socket.removeEventListener('message', handleMessage);\r\n//     }\r\n//   }, [socket, origin, destination, date]);\r\n\r\n//   const generateBookingUrl = (flight: any, origin: string, destination: string, date: string) => {\r\n//     const airline = flight.airline.toLowerCase();\r\n    \r\n//     // Generate booking URLs based on airline\r\n//     if (airline.includes('indigo')) {\r\n//       return `https://www.goindigo.in/booking/flight-select?origin=${origin}&destination=${destination}&departure=${date}&passengers=${passengers}&class=${travelClass}`;\r\n//     } else if (airline.includes('air india')) {\r\n//       return `https://www.airindia.in/booking?from=${origin}&to=${destination}&date=${date}&pax=${passengers}&class=${travelClass}`;\r\n//     } else if (airline.includes('spicejet')) {\r\n//       return `https://www.spicejet.com/flight-booking?origin=${origin}&destination=${destination}&departure=${date}&passengers=${passengers}`;\r\n//     } else if (airline.includes('vistara')) {\r\n//       return `https://www.airvistara.com/booking/flight-search?origin=${origin}&destination=${destination}&date=${date}&passengers=${passengers}`;\r\n//     } else {\r\n//       // Generic booking URL for other airlines\r\n//       return `https://www.makemytrip.com/flight/search?itinerary=${origin}-${destination}-${date}&tripType=O&paxType=A-${passengers}_C-0_I-0&intl=false&class=${travelClass.toUpperCase()}`;\r\n//     }\r\n//   };\r\n\r\n//   const handleSearch = async () => {\r\n//     if (!origin || !destination) {\r\n//       alert('Please enter both origin and destination');\r\n//       return;\r\n//     }\r\n\r\n//     if (!isConnected) {\r\n//       alert('AI assistant is not connected. Please wait for connection.');\r\n//       return;\r\n//     }\r\n\r\n//     setSearching(true);\r\n//     setResults([]);\r\n//     setAiAnalysis('');\r\n    \r\n//     const currentSearchId = Date.now().toString();\r\n//     setSearchId(currentSearchId);\r\n    \r\n//     // Format date for AI\r\n//     const searchDate = date || new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\r\n    \r\n//     // Send comprehensive search request to AI\r\n//     const searchQuery = `Search flights from ${origin} to ${destination} on ${searchDate} for ${passengers} passenger(s) in ${travelClass} class. Please provide real-time flight options with prices, timings, and booking recommendations.`;\r\n    \r\n//     sendMessage(searchQuery);\r\n    \r\n//     // Fallback timeout in case AI doesn't respond\r\n//     setTimeout(() => {\r\n//       if (searching) {\r\n//         setSearching(false);\r\n//         // Provide fallback data if AI doesn't respond\r\n//         const fallbackResults: FlightResult[] = [\r\n//           {\r\n//             airline: 'IndiGo',\r\n//             price: '₹8,500',\r\n//             time: '08:30 AM',\r\n//             duration: '2h 15m',\r\n//             flightNumber: '6E-234',\r\n//             route: `${origin} → ${destination}`,\r\n//             stops: 0,\r\n//             aircraft: 'A320',\r\n//             source: 'Fallback Data',\r\n//             scraped: false,\r\n//             bookingUrl: generateBookingUrl({ airline: 'IndiGo' }, origin, destination, searchDate)\r\n//           },\r\n//           {\r\n//             airline: 'Air India',\r\n//             price: '₹12,200',\r\n//             time: '02:15 PM',\r\n//             duration: '2h 30m',\r\n//             flightNumber: 'AI-131',\r\n//             route: `${origin} → ${destination}`,\r\n//             stops: 0,\r\n//             aircraft: 'A321',\r\n//             source: 'Fallback Data',\r\n//             scraped: false,\r\n//             bookingUrl: generateBookingUrl({ airline: 'Air India' }, origin, destination, searchDate)\r\n//           },\r\n//           {\r\n//             airline: 'SpiceJet',\r\n//             price: '₹7,800',\r\n//             time: '06:45 PM',\r\n//             duration: '2h 20m',\r\n//             flightNumber: 'SG-8194',\r\n//             route: `${origin} → ${destination}`,\r\n//             stops: 0,\r\n//             aircraft: 'B737',\r\n//             source: 'Fallback Data',\r\n//             scraped: false,\r\n//             bookingUrl: generateBookingUrl({ airline: 'SpiceJet' }, origin, destination, searchDate)\r\n//           }\r\n//         ];\r\n//         setResults(fallbackResults);\r\n//         setAiAnalysis('Using cached flight data. For real-time prices and availability, please click \"Book Now\" on your preferred flight.');\r\n//       }\r\n//     }, 10000); // 10 second timeout\r\n//   };\r\n\r\n//   const handleBookFlight = (flight: FlightResult) => {\r\n//     if (flight.bookingUrl) {\r\n//       // Open booking URL in new tab\r\n//       window.open(flight.bookingUrl, '_blank', 'noopener,noreferrer');\r\n      \r\n//       // Send booking analytics to AI\r\n//       if (isConnected) {\r\n//         sendMessage(`User selected ${flight.airline} flight ${flight.flightNumber} for ${flight.price} from ${origin} to ${destination}`);\r\n//       }\r\n//     } else {\r\n//       alert('Booking URL not available for this flight. Please visit the airline website directly.');\r\n//     }\r\n//   };\r\n\r\n//   const getFlightStatusColor = (flight: FlightResult) => {\r\n//     if (flight.scraped) {\r\n//       return '#10b981'; // Green for live data\r\n//     } else {\r\n//       return '#f59e0b'; // Orange for fallback data\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flight-search\">\r\n//       <div className=\"page-header\">\r\n//         <h1>Flight Search</h1>\r\n//         <p>Real-time flight search with intelligent recommendations</p>\r\n//         {isConnected && (\r\n//           <div className=\"ai-status\">\r\n//             <span className=\"status-dot connected\"></span>\r\n//             AI Assistant Connected\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Search Form */}\r\n//       <div className=\"search-form\">\r\n//         <div className=\"form-grid\">\r\n//           <div className=\"form-group\">\r\n//             <label className=\"form-label\">From</label>\r\n//             <input \r\n//               type=\"text\" \r\n//               className=\"form-input\"\r\n//               placeholder=\"Delhi, Mumbai, Bangalore...\"\r\n//               value={origin}\r\n//               onChange={(e) => setOrigin(e.target.value)}\r\n//               list=\"airports-from\"\r\n//             />\r\n//             <datalist id=\"airports-from\">\r\n//               <option value=\"Delhi\">Delhi (DEL)</option>\r\n//               <option value=\"Mumbai\">Mumbai (BOM)</option>\r\n//               <option value=\"Bangalore\">Bangalore (BLR)</option>\r\n//               <option value=\"Chennai\">Chennai (MAA)</option>\r\n//               <option value=\"Kolkata\">Kolkata (CCU)</option>\r\n//               <option value=\"Hyderabad\">Hyderabad (HYD)</option>\r\n//               <option value=\"Pune\">Pune (PNQ)</option>\r\n//             </datalist>\r\n//           </div>\r\n          \r\n//           <div className=\"form-group\">\r\n//             <label className=\"form-label\">To</label>\r\n//             <input \r\n//               type=\"text\" \r\n//               className=\"form-input\"\r\n//               placeholder=\"Delhi, Mumbai, Bangalore...\"\r\n//               value={destination}\r\n//               onChange={(e) => setDestination(e.target.value)}\r\n//               list=\"airports-to\"\r\n//             />\r\n//             <datalist id=\"airports-to\">\r\n//               <option value=\"Delhi\">Delhi (DEL)</option>\r\n//               <option value=\"Mumbai\">Mumbai (BOM)</option>\r\n//               <option value=\"Bangalore\">Bangalore (BLR)</option>\r\n//               <option value=\"Chennai\">Chennai (MAA)</option>\r\n//               <option value=\"Kolkata\">Kolkata (CCU)</option>\r\n//               <option value=\"Hyderabad\">Hyderabad (HYD)</option>\r\n//               <option value=\"Pune\">Pune (PNQ)</option>\r\n//             </datalist>\r\n//           </div>\r\n          \r\n//           <div className=\"form-group\">\r\n//             <label className=\"form-label\">Departure Date</label>\r\n//             <input \r\n//               type=\"date\" \r\n//               className=\"form-input\"\r\n//               value={date}\r\n//               onChange={(e) => setDate(e.target.value)}\r\n//               min={new Date().toISOString().split('T')[0]}\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label className=\"form-label\">Passengers</label>\r\n//             <select \r\n//               className=\"form-input\"\r\n//               value={passengers}\r\n//               onChange={(e) => setPassengers(e.target.value)}\r\n//             >\r\n//               {[1,2,3,4,5,6,7,8,9].map(num => (\r\n//                 <option key={num} value={num}>{num} {num === 1 ? 'Passenger' : 'Passengers'}</option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label className=\"form-label\">Class</label>\r\n//             <select \r\n//               className=\"form-input\"\r\n//               value={travelClass}\r\n//               onChange={(e) => setTravelClass(e.target.value)}\r\n//             >\r\n//               <option value=\"economy\">Economy</option>\r\n//               <option value=\"premium-economy\">Premium Economy</option>\r\n//               <option value=\"business\">Business</option>\r\n//               <option value=\"first\">First Class</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"search-actions\">\r\n//           <button \r\n//             className=\"btn btn-primary search-btn\" \r\n//             onClick={handleSearch}\r\n//             disabled={searching || !isConnected}\r\n//           >\r\n//             {searching ? (\r\n//               <>\r\n//                 <div className=\"spinner-small\"></div>\r\n//                 Searching...\r\n//               </>\r\n//             ) : (\r\n//               'Search Flights'\r\n//             )}\r\n//           </button>\r\n          \r\n//           {!isConnected && (\r\n//             <p className=\"connection-warning\">\r\n//               ⚠️ AI assistant disconnected. Reconnecting...\r\n//             </p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* AI Analysis */}\r\n//       {aiAnalysis && (\r\n//         <div className=\"ai-analysis\">\r\n//           <h3>🤖 AI Travel Insights</h3>\r\n//           <p>{aiAnalysis}</p>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Flight Results */}\r\n//       {results.length > 0 && (\r\n//         <div className=\"flight-results\">\r\n//           <div className=\"results-header\">\r\n//             <h2>Flight Options</h2>\r\n//             <p>{results.length} flights found for {origin} → {destination}</p>\r\n//           </div>\r\n          \r\n//           <div className=\"flights-grid\">\r\n//             {results.map((flight, index) => (\r\n//               <div key={index} className=\"flight-card\">\r\n//                 <div className=\"flight-header\">\r\n//                   <div className=\"airline-info\">\r\n//                     <h3>{flight.airline}</h3>\r\n//                     <span className=\"flight-number\">{flight.flightNumber}</span>\r\n//                   </div>\r\n//                   <div \r\n//                     className=\"data-source\"\r\n//                     style={{ color: getFlightStatusColor(flight) }}\r\n//                   >\r\n//                     {flight.scraped ? '🟢 Live Data' : '🟡 Cached Data'}\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"flight-details\">\r\n//                   <div className=\"time-info\">\r\n//                     <div className=\"departure\">\r\n//                       <span className=\"time\">{flight.time}</span>\r\n//                       <span className=\"airport\">{origin}</span>\r\n//                     </div>\r\n//                     <div className=\"duration\">\r\n//                       <span className=\"duration-text\">{flight.duration}</span>\r\n//                       <div className=\"flight-line\">\r\n//                         <div className=\"line\"></div>\r\n//                         <div className=\"plane\">✈️</div>\r\n//                       </div>\r\n//                       {flight.stops !== undefined && (\r\n//                         <span className=\"stops\">\r\n//                           {flight.stops === 0 ? 'Non-stop' : `${flight.stops} stop${flight.stops > 1 ? 's' : ''}`}\r\n//                         </span>\r\n//                       )}\r\n//                     </div>\r\n//                     <div className=\"arrival\">\r\n//                       <span className=\"time\">\r\n//                         {/* Calculate arrival time */}\r\n//                         {(() => {\r\n//                           const [hours, minutes] = flight.time.split(/[:\\s]/);\r\n//                           const [durationHours, durationMinutes] = flight.duration.match(/\\d+/g) || ['2', '0'];\r\n//                           const departureTime = new Date();\r\n//                           departureTime.setHours(parseInt(hours) + (flight.time.includes('PM') && hours !== '12' ? 12 : 0));\r\n//                           departureTime.setMinutes(parseInt(minutes));\r\n//                           departureTime.setHours(departureTime.getHours() + parseInt(durationHours));\r\n//                           departureTime.setMinutes(departureTime.getMinutes() + parseInt(durationMinutes));\r\n//                           return departureTime.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: true });\r\n//                         })()}\r\n//                       </span>\r\n//                       <span className=\"airport\">{destination}</span>\r\n//                     </div>\r\n//                   </div>\r\n                  \r\n//                   {flight.aircraft && (\r\n//                     <div className=\"aircraft-info\">\r\n//                       <span>Aircraft: {flight.aircraft}</span>\r\n//                     </div>\r\n//                   )}\r\n//                 </div>\r\n                \r\n//                 <div className=\"flight-footer\">\r\n//                   <div className=\"price-section\">\r\n//                     <span className=\"price\">{flight.price}</span>\r\n//                     <span className=\"price-note\">per person</span>\r\n//                   </div>\r\n                  \r\n//                   <button \r\n//                     className=\"btn btn-success book-btn\"\r\n//                     onClick={() => handleBookFlight(flight)}\r\n//                   >\r\n//                     📅 Book Now\r\n//                   </button>\r\n//                 </div>\r\n                \r\n//                 <div className=\"source-info\">\r\n//                   <small>Source: {flight.source}</small>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {searching && (\r\n//         <div className=\"searching-indicator\">\r\n//           <div className=\"spinner\"></div>\r\n//           <h3>Searching for the best flights...</h3>\r\n//           <p>Analyzing real-time prices and availability</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FlightSearch;\r\n\r\nimport React, { useState } from 'react';\r\n// import { flightService, FlightResult, FlightSearchParams } from '../services/FlightService';\r\nimport flightService, { FlightSearchRequest, FlightResult } from '../services/FlightService';\r\n\r\ninterface FlightSearchProps {\r\n  socket: WebSocket | null;\r\n  sendMessage: (message: string) => void;\r\n  isConnected: boolean;\r\n}\r\n\r\nconst FlightSearch: React.FC<FlightSearchProps> = ({ socket, sendMessage, isConnected }) => {\r\n  const [searchParams, setSearchParams] = useState<FlightSearchParams>({\r\n    origin: '',\r\n    destination: '',\r\n    departureDate: '',\r\n    passengers: 1,\r\n    class: 'economy'\r\n  });\r\n  \r\n  const [flights, setFlights] = useState<FlightResult[]>([]);\r\n  const [searching, setSearching] = useState(false);\r\n  const [searchFailed, setSearchFailed] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleInputChange = (field: keyof FlightSearchParams, value: string | number) => {\r\n    setSearchParams(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!searchParams.origin || !searchParams.destination) {\r\n      alert('Please enter both origin and destination');\r\n      return;\r\n    }\r\n\r\n    setSearching(true);\r\n    setSearchFailed(false);\r\n    setErrorMessage('');\r\n    setFlights([]);\r\n\r\n    try {\r\n      // Send AI message for logging\r\n      if (isConnected) {\r\n        sendMessage(`Searching flights from ${searchParams.origin} to ${searchParams.destination} on ${searchParams.departureDate}`);\r\n      }\r\n\r\n      const results = await flightService.searchFlights(searchParams);\r\n      \r\n      if (results.length > 0) {\r\n        setFlights(results);\r\n        setSearchFailed(false);\r\n      } else {\r\n        setSearchFailed(true);\r\n        setErrorMessage('No flights found. Our flight search services are currently unavailable.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Flight search error:', error);\r\n      setSearchFailed(true);\r\n      setErrorMessage('Flight search services are temporarily unavailable. Please try again later.');\r\n    } finally {\r\n      setSearching(false);\r\n    }\r\n  };\r\n\r\n  const handleSelectFlight = (flight: FlightResult) => {\r\n    // Log selection with AI\r\n    if (isConnected) {\r\n      sendMessage(`User selected ${flight.airline} flight ${flight.flightNumber} for ₹${flight.price}`);\r\n    }\r\n\r\n    // Open booking URL\r\n    window.open(flight.bookingUrl, '_blank', 'noopener,noreferrer');\r\n  };\r\n\r\n  const openSkyscanner = () => {\r\n    const skyscannerUrl = `https://www.skyscanner.co.in/transport/flights/${searchParams.origin}/${searchParams.destination}/${searchParams.departureDate?.replace(/-/g, '')}/?adults=${searchParams.passengers}&children=0&adultsv2=${searchParams.passengers}&childrenv2=&infants=0&cabinclass=${searchParams.class}&rtn=0`;\r\n    window.open(skyscannerUrl, '_blank', 'noopener,noreferrer');\r\n  };\r\n\r\n  return (\r\n    <div className=\"flight-search\">\r\n      <div className=\"page-header\">\r\n        <h1>✈️ AI Flight Search</h1>\r\n        <p>Find the best flights with real-time data and AI assistance</p>\r\n      </div>\r\n\r\n      {/* Search Form */}\r\n      <div className=\"search-form\">\r\n        <div className=\"form-grid\">\r\n          <div className=\"form-group\">\r\n            <label>From</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Delhi, Mumbai, Bangalore...\"\r\n              value={searchParams.origin}\r\n              onChange={(e) => handleInputChange('origin', e.target.value)}\r\n              className=\"form-input\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>To</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Mumbai, Chennai, Hyderabad...\"\r\n              value={searchParams.destination}\r\n              onChange={(e) => handleInputChange('destination', e.target.value)}\r\n              className=\"form-input\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Departure Date</label>\r\n            <input\r\n              type=\"date\"\r\n              value={searchParams.departureDate}\r\n              onChange={(e) => handleInputChange('departureDate', e.target.value)}\r\n              className=\"form-input\"\r\n              min={new Date().toISOString().split('T')[0]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Passengers</label>\r\n            <select\r\n              value={searchParams.passengers}\r\n              onChange={(e) => handleInputChange('passengers', parseInt(e.target.value))}\r\n              className=\"form-input\"\r\n            >\r\n              {[1,2,3,4,5,6].map(num => (\r\n                <option key={num} value={num}>{num} {num === 1 ? 'Adult' : 'Adults'}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Class</label>\r\n            <select\r\n              value={searchParams.class}\r\n              onChange={(e) => handleInputChange('class', e.target.value)}\r\n              className=\"form-input\"\r\n            >\r\n              <option value=\"economy\">Economy</option>\r\n              <option value=\"business\">Business</option>\r\n              <option value=\"first\">First Class</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"search-actions\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={handleSearch}\r\n            disabled={searching || !searchParams.origin || !searchParams.destination}\r\n          >\r\n            {searching ? '🔍 Searching...' : '🔍 Search Flights'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Search Results */}\r\n      {searching && (\r\n        <div className=\"search-status\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Searching for the best flights...</p>\r\n          <small>Checking multiple sources for real-time prices</small>\r\n        </div>\r\n      )}\r\n\r\n      {searchFailed && (\r\n        <div className=\"search-failed\">\r\n          <div className=\"error-message\">\r\n            <h3>🚫 Flight Search Unavailable</h3>\r\n            <p>{errorMessage}</p>\r\n            <p>Our real-time flight search is temporarily unavailable. You can search directly on Skyscanner:</p>\r\n            \r\n            <button className=\"btn btn-skyscanner\" onClick={openSkyscanner}>\r\n              🔗 Search on Skyscanner\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {flights.length > 0 && (\r\n        <div className=\"flight-results\">\r\n          <div className=\"results-header\">\r\n            <h3>✈️ Available Flights</h3>\r\n            <p>Found {flights.length} flights • Real-time prices</p>\r\n          </div>\r\n\r\n          <div className=\"flights-list\">\r\n            {flights.map((flight, index) => (\r\n              <div key={flight.id} className=\"flight-card\">\r\n                <div className=\"flight-info\">\r\n                  <div className=\"airline-section\">\r\n                    <h4>{flight.airline}</h4>\r\n                    <span className=\"flight-number\">{flight.flightNumber}</span>\r\n                    <span className={`source-badge ${flight.source}`}>\r\n                      {flight.source === 'serpapi' ? 'Live Data' : \r\n                       flight.source === 'scraping' ? 'Real-time' : 'Cached'}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"time-section\">\r\n                    <div className=\"time-info\">\r\n                      <span className=\"time\">{flight.departureTime}</span>\r\n                      <span className=\"airport\">{searchParams.origin}</span>\r\n                    </div>\r\n                    <div className=\"flight-path\">\r\n                      <span className=\"duration\">{flight.duration}</span>\r\n                      <div className=\"path-line\">\r\n                        {flight.stops === 0 ? (\r\n                          <span className=\"direct\">Direct</span>\r\n                        ) : (\r\n                          <span className=\"stops\">{flight.stops} stop{flight.stops > 1 ? 's' : ''}</span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"time-info\">\r\n                      <span className=\"time\">{flight.arrivalTime}</span>\r\n                      <span className=\"airport\">{searchParams.destination}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"price-section\">\r\n                    <div className=\"price\">{flight.price}</div>\r\n                    <button\r\n                      className=\"btn btn-select\"\r\n                      onClick={() => handleSelectFlight(flight)}\r\n                    >\r\n                      Select Flight →\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"search-alternatives\">\r\n            <p>Want more options?</p>\r\n            <button className=\"btn btn-secondary\" onClick={openSkyscanner}>\r\n              🔗 View more on Skyscanner\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlightSearch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}