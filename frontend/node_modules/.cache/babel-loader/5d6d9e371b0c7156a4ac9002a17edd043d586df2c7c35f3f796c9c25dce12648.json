{"ast":null,"code":"const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';// Add request interceptor for CORS\nconst api=axios.create({baseURL:API_BASE_URL,timeout:30000,headers:{'Content-Type':'application/json','Accept':'application/json'},withCredentials:false// Set to false for CORS issues\n});// Add response interceptor\napi.interceptors.response.use(response=>response,error=>{if(error.code==='ECONNABORTED'){console.error('Request timeout');}return Promise.reject(error);});export default api;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","api","axios","create","baseURL","timeout","headers","withCredentials","interceptors","response","use","error","code","console","Promise","reject"],"sources":["D:/Navikenz/pro/navihire/frontend/src/services/api.ts"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n// Add request interceptor for CORS\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n  },\r\n  withCredentials: false, // Set to false for CORS issues\r\n});\r\n\r\n// Add response interceptor\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.code === 'ECONNABORTED') {\r\n      console.error('Request timeout');\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"mappings":"AAAA,KAAM,CAAAA,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CAE7E;AACA,KAAM,CAAAC,GAAG,CAAGC,KAAK,CAACC,MAAM,CAAC,CACvBC,OAAO,CAAEP,YAAY,CACrBQ,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,QAAQ,CAAE,kBACZ,CAAC,CACDC,eAAe,CAAE,KAAO;AAC1B,CAAC,CAAC,CAEF;AACAN,GAAG,CAACO,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,EAAKA,QAAQ,CACrBE,KAAK,EAAK,CACT,GAAIA,KAAK,CAACC,IAAI,GAAK,cAAc,CAAE,CACjCC,OAAO,CAACF,KAAK,CAAC,iBAAiB,CAAC,CAClC,CACA,MAAO,CAAAG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,cAAe,CAAAV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}