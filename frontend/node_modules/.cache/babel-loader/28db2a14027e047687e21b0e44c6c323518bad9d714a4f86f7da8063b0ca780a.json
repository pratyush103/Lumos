{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ConnectionStatus=_ref=>{let{status,onReconnect,lastActivity}=_ref;const getStatusInfo=()=>{switch(status){case'connected':return{icon:'ðŸŸ¢',text:'Connected',color:'#10b981',showReconnect:false};case'connecting':return{icon:'ðŸŸ¡',text:'Connecting...',color:'#f59e0b',showReconnect:false};case'reconnecting':return{icon:'ðŸ”„',text:'Reconnecting...',color:'#f59e0b',showReconnect:false};case'disconnected':return{icon:'ðŸ”´',text:'Disconnected',color:'#ef4444',showReconnect:true};default:return{icon:'âšª',text:'Unknown',color:'#6b7280',showReconnect:true};}};const statusInfo=getStatusInfo();const lastActivityText=lastActivity?\"Last activity: \".concat(lastActivity.toLocaleTimeString()):'No activity';return/*#__PURE__*/_jsxs(\"div\",{className:\"connection-status\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-icon\",children:statusInfo.icon}),/*#__PURE__*/_jsx(\"span\",{className:\"status-text\",style:{color:statusInfo.color},children:statusInfo.text}),statusInfo.showReconnect&&/*#__PURE__*/_jsx(\"button\",{className:\"reconnect-button\",onClick:onReconnect,title:\"Click to reconnect\",children:\"\\uD83D\\uDD04 Reconnect\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"last-activity\",title:lastActivityText,children:lastActivity&&/*#__PURE__*/_jsx(\"small\",{children:lastActivityText})})]});};export default ConnectionStatus;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","ConnectionStatus","_ref","status","onReconnect","lastActivity","getStatusInfo","icon","text","color","showReconnect","statusInfo","lastActivityText","concat","toLocaleTimeString","className","children","style","onClick","title"],"sources":["D:/Navikenz/pro/navihire/frontend/src/components/common/ConnectionStatus.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface ConnectionStatusProps {\r\n  status: 'connecting' | 'connected' | 'disconnected' | 'reconnecting';\r\n  onReconnect: () => void;\r\n  lastActivity: Date | null;\r\n}\r\n\r\nconst ConnectionStatus: React.FC<ConnectionStatusProps> = ({ \r\n  status, \r\n  onReconnect, \r\n  lastActivity \r\n}) => {\r\n  const getStatusInfo = () => {\r\n    switch (status) {\r\n      case 'connected':\r\n        return {\r\n          icon: 'ðŸŸ¢',\r\n          text: 'Connected',\r\n          color: '#10b981',\r\n          showReconnect: false\r\n        };\r\n      case 'connecting':\r\n        return {\r\n          icon: 'ðŸŸ¡',\r\n          text: 'Connecting...',\r\n          color: '#f59e0b',\r\n          showReconnect: false\r\n        };\r\n      case 'reconnecting':\r\n        return {\r\n          icon: 'ðŸ”„',\r\n          text: 'Reconnecting...',\r\n          color: '#f59e0b',\r\n          showReconnect: false\r\n        };\r\n      case 'disconnected':\r\n        return {\r\n          icon: 'ðŸ”´',\r\n          text: 'Disconnected',\r\n          color: '#ef4444',\r\n          showReconnect: true\r\n        };\r\n      default:\r\n        return {\r\n          icon: 'âšª',\r\n          text: 'Unknown',\r\n          color: '#6b7280',\r\n          showReconnect: true\r\n        };\r\n    }\r\n  };\r\n\r\n  const statusInfo = getStatusInfo();\r\n  const lastActivityText = lastActivity \r\n    ? `Last activity: ${lastActivity.toLocaleTimeString()}`\r\n    : 'No activity';\r\n\r\n  return (\r\n    <div className=\"connection-status\">\r\n      <div className=\"status-indicator\">\r\n        <span className=\"status-icon\">{statusInfo.icon}</span>\r\n        <span \r\n          className=\"status-text\"\r\n          style={{ color: statusInfo.color }}\r\n        >\r\n          {statusInfo.text}\r\n        </span>\r\n        {statusInfo.showReconnect && (\r\n          <button \r\n            className=\"reconnect-button\"\r\n            onClick={onReconnect}\r\n            title=\"Click to reconnect\"\r\n          >\r\n            ðŸ”„ Reconnect\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"last-activity\" title={lastActivityText}>\r\n        {lastActivity && (\r\n          <small>{lastActivityText}</small>\r\n        )}\r\n      </div>\r\n\r\n      {/* <style jsx>{`\r\n        .connection-status {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 10px;\r\n          padding: 8px 12px;\r\n          background: #f8fafc;\r\n          border-radius: 6px;\r\n          border: 1px solid #e5e7eb;\r\n          font-size: 14px;\r\n        }\r\n\r\n        .status-indicator {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 6px;\r\n        }\r\n\r\n        .status-icon {\r\n          font-size: 12px;\r\n        }\r\n\r\n        .status-text {\r\n          font-weight: 500;\r\n        }\r\n\r\n        .reconnect-button {\r\n          background: #3b82f6;\r\n          color: white;\r\n          border: none;\r\n          padding: 4px 8px;\r\n          border-radius: 4px;\r\n          font-size: 12px;\r\n          cursor: pointer;\r\n          transition: background-color 0.2s;\r\n        }\r\n\r\n        .reconnect-button:hover {\r\n          background: #2563eb;\r\n        }\r\n\r\n        .last-activity {\r\n          color: #6b7280;\r\n          font-size: 12px;\r\n        }\r\n\r\n        @media (max-width: 768px) {\r\n          .connection-status {\r\n            flex-direction: column;\r\n            align-items: flex-start;\r\n            gap: 4px;\r\n          }\r\n        }\r\n      `}</style> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectionStatus;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAQ1B,KAAM,CAAAC,gBAAiD,CAAGC,IAAA,EAIpD,IAJqD,CACzDC,MAAM,CACNC,WAAW,CACXC,YACF,CAAC,CAAAH,IAAA,CACC,KAAM,CAAAI,aAAa,CAAGA,CAAA,GAAM,CAC1B,OAAQH,MAAM,EACZ,IAAK,WAAW,CACd,MAAO,CACLI,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,WAAW,CACjBC,KAAK,CAAE,SAAS,CAChBC,aAAa,CAAE,KACjB,CAAC,CACH,IAAK,YAAY,CACf,MAAO,CACLH,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,eAAe,CACrBC,KAAK,CAAE,SAAS,CAChBC,aAAa,CAAE,KACjB,CAAC,CACH,IAAK,cAAc,CACjB,MAAO,CACLH,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,iBAAiB,CACvBC,KAAK,CAAE,SAAS,CAChBC,aAAa,CAAE,KACjB,CAAC,CACH,IAAK,cAAc,CACjB,MAAO,CACLH,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,cAAc,CACpBC,KAAK,CAAE,SAAS,CAChBC,aAAa,CAAE,IACjB,CAAC,CACH,QACE,MAAO,CACLH,IAAI,CAAE,GAAG,CACTC,IAAI,CAAE,SAAS,CACfC,KAAK,CAAE,SAAS,CAChBC,aAAa,CAAE,IACjB,CAAC,CACL,CACF,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGL,aAAa,CAAC,CAAC,CAClC,KAAM,CAAAM,gBAAgB,CAAGP,YAAY,mBAAAQ,MAAA,CACfR,YAAY,CAACS,kBAAkB,CAAC,CAAC,EACnD,aAAa,CAEjB,mBACEd,KAAA,QAAKe,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChChB,KAAA,QAAKe,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BlB,IAAA,SAAMiB,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAEL,UAAU,CAACJ,IAAI,CAAO,CAAC,cACtDT,IAAA,SACEiB,SAAS,CAAC,aAAa,CACvBE,KAAK,CAAE,CAAER,KAAK,CAAEE,UAAU,CAACF,KAAM,CAAE,CAAAO,QAAA,CAElCL,UAAU,CAACH,IAAI,CACZ,CAAC,CACNG,UAAU,CAACD,aAAa,eACvBZ,IAAA,WACEiB,SAAS,CAAC,kBAAkB,CAC5BG,OAAO,CAAEd,WAAY,CACrBe,KAAK,CAAC,oBAAoB,CAAAH,QAAA,CAC3B,wBAED,CAAQ,CACT,EACE,CAAC,cACNlB,IAAA,QAAKiB,SAAS,CAAC,eAAe,CAACI,KAAK,CAAEP,gBAAiB,CAAAI,QAAA,CACpDX,YAAY,eACXP,IAAA,UAAAkB,QAAA,CAAQJ,gBAAgB,CAAQ,CACjC,CACE,CAAC,EAwDH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAX,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}