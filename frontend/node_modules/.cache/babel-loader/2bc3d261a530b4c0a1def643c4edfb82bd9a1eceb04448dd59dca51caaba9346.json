{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import Dashboard from \"./components/Dashboard\";\n// import ResumeUpload from \"./components/ResumeUpload\";\n// import FlightSearch from \"./components/FlightSearch\";\n// import JobGenerator from \"./components/JobGenerator\";\n// import CandidateMatching from \"./components/CandidateMatching\";\n// import CandidateDatabase from \"./components/CandidateDatabase\";\n// import InterviewScheduler from \"./components/InterviewScheduler\";\n// import TravelDashboard from \"./components/TravelDashboard\";\n// import { useWebSocket } from \"./hooks/useWebSocket\";\n// import ConnectionStatus from \"./components/common/ConnectionStatus\";\n\n// const App: React.FC = () => {\n//   const [currentPage, setCurrentPage] = useState(\"dashboard\");\n//   const [user, setUser] = useState({ name: \"HR Manager\", role: \"hr_manager\" });\n//   // const { socket, isConnected, sendMessage } = useWebSocket('ws://localhost:8000/ws/chat/hr_user');\n//   const [userId] = useState(() => `user_${Date.now()}`);\n\n//   const {\n//     socket,\n//     isConnected,\n//     connectionStatus,\n//     sendMessage,\n//     messages,\n//     reconnect,\n//     lastActivity,\n//   } = useWebSocket(userId);\n\n//   const menuItems = [\n//     { id: \"dashboard\", label: \"📊 Dashboard\", category: \"main\" },\n//     { id: \"job-generator\", label: \"✨ JD Generator\", category: \"talent\" },\n//     { id: \"resume-upload\", label: \"📄 Resume Upload\", category: \"talent\" },\n//     {\n//       id: \"candidate-matching\",\n//       label: \"🎯 Smart Matching\",\n//       category: \"talent\",\n//     },\n//     {\n//       id: \"candidate-database\",\n//       label: \"👥 Candidate Database\",\n//       category: \"talent\",\n//     },\n//     {\n//       id: \"test-scheduler\",\n//       label: \"📄 Test Scheduler\",\n//       category: \"talent\",\n//     },\n//     {\n//       id: \"interview-scheduler\",\n//       label: \"📅 Interview Scheduler\",\n//       category: \"talent\",\n//     },\n//     {\n//       id: \"onboarding-mail\",\n//       label: \"📧 Onboarding Mail\",\n//       category: \"talent\",\n//     },\n//     { id: \"flight-search\", label: \"✈️ Flight Search\", category: \"travel\" },\n//     {\n//       id: \"travel-dashboard\",\n//       label: \"🗺️ Travel Dashboard\",\n//       category: \"travel\",\n//     },\n//   ];\n\n//   const renderPage = () => {\n//     const pageProps = { socket, sendMessage, isConnected, messages };\n\n//     switch (currentPage) {\n//       case \"dashboard\":\n//         return <Dashboard {...pageProps} />;\n//       case \"job-generator\":\n//         return <JobGenerator {...pageProps} />;\n//       case \"resume-upload\":\n//         return <ResumeUpload {...pageProps} />;\n//       case \"candidate-matching\":\n//         return <CandidateMatching {...pageProps} />;\n//       case \"candidate-database\":\n//         return <CandidateDatabase {...pageProps} />;\n//       case \"interview-scheduler\":\n//         return <InterviewScheduler {...pageProps} />;\n//       case \"flight-search\":\n//         return <FlightSearch {...pageProps} />;\n//       case \"travel-dashboard\":\n//         return <TravelDashboard {...pageProps} />;\n//       default:\n//         return <Dashboard {...pageProps} />;\n//     }\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       {/* Header */}\n//       <header className=\"app-header\">\n//         <div className=\"header-content\">\n//           <div className=\"logo-section\">\n//             <h1>NaviHire</h1>\n//             <span className=\"tagline\">\n//               AI-Powered Talent & Travel Intelligence\n//             </span>\n//           </div>\n//           <div className=\"user-section\">\n//             {/* <div className={`connection-status ${isConnected ? 'connected' : 'disconnected'}`}>\n//               <span className=\"status-dot\"></span>\n//               {isConnected ? 'AI Connected' : 'Connecting...'}\n//             </div> */}\n//             <ConnectionStatus\n//               status={connectionStatus}\n//               onReconnect={reconnect}\n//               lastActivity={lastActivity}\n//             />\n//             <div className=\"user-info\">\n//               <span>👤 {user.name}</span>\n//               {/* <div className=\"user-avatar\">👤</div> */}\n//             </div>\n//           </div>\n//         </div>\n//       </header>\n\n//       <div className=\"main-layout\">\n//         {/* Sidebar Navigation */}\n//         <nav className=\"sidebar\">\n//           <div className=\"nav-section\">\n//             <h3>Main</h3>\n//             {menuItems\n//               .filter((item) => item.category === \"main\")\n//               .map((item) => (\n//                 <button\n//                   key={item.id}\n//                   className={`nav-item ${\n//                     currentPage === item.id ? \"active\" : \"\"\n//                   }`}\n//                   onClick={() => setCurrentPage(item.id)}\n//                 >\n//                   {item.label}\n//                 </button>\n//               ))}\n//           </div>\n\n//           <div className=\"nav-section\">\n//             <h3>Talent Acquisition</h3>\n//             {menuItems\n//               .filter((item) => item.category === \"talent\")\n//               .map((item) => (\n//                 <button\n//                   key={item.id}\n//                   className={`nav-item ${\n//                     currentPage === item.id ? \"active\" : \"\"\n//                   }`}\n//                   onClick={() => setCurrentPage(item.id)}\n//                 >\n//                   {item.label}\n//                 </button>\n//               ))}\n//           </div>\n\n//           <div className=\"nav-section\">\n//             <h3>Travel Intelligence</h3>\n//             {menuItems\n//               .filter((item) => item.category === \"travel\")\n//               .map((item) => (\n//                 <button\n//                   key={item.id}\n//                   className={`nav-item ${\n//                     currentPage === item.id ? \"active\" : \"\"\n//                   }`}\n//                   onClick={() => setCurrentPage(item.id)}\n//                 >\n//                   {item.label}\n//                 </button>\n//               ))}\n//           </div>\n//         </nav>\n\n//         {/* Main Content */}\n//         <main className=\"main-content\">{renderPage()}</main>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;","map":{"version":3,"names":[],"sources":["D:/Navikenz/pro/navihire/frontend/src/App.tsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Dashboard from \"./components/Dashboard\";\r\n// import ResumeUpload from \"./components/ResumeUpload\";\r\n// import FlightSearch from \"./components/FlightSearch\";\r\n// import JobGenerator from \"./components/JobGenerator\";\r\n// import CandidateMatching from \"./components/CandidateMatching\";\r\n// import CandidateDatabase from \"./components/CandidateDatabase\";\r\n// import InterviewScheduler from \"./components/InterviewScheduler\";\r\n// import TravelDashboard from \"./components/TravelDashboard\";\r\n// import { useWebSocket } from \"./hooks/useWebSocket\";\r\n// import ConnectionStatus from \"./components/common/ConnectionStatus\";\r\n\r\n// const App: React.FC = () => {\r\n//   const [currentPage, setCurrentPage] = useState(\"dashboard\");\r\n//   const [user, setUser] = useState({ name: \"HR Manager\", role: \"hr_manager\" });\r\n//   // const { socket, isConnected, sendMessage } = useWebSocket('ws://localhost:8000/ws/chat/hr_user');\r\n//   const [userId] = useState(() => `user_${Date.now()}`);\r\n\r\n//   const {\r\n//     socket,\r\n//     isConnected,\r\n//     connectionStatus,\r\n//     sendMessage,\r\n//     messages,\r\n//     reconnect,\r\n//     lastActivity,\r\n//   } = useWebSocket(userId);\r\n\r\n//   const menuItems = [\r\n//     { id: \"dashboard\", label: \"📊 Dashboard\", category: \"main\" },\r\n//     { id: \"job-generator\", label: \"✨ JD Generator\", category: \"talent\" },\r\n//     { id: \"resume-upload\", label: \"📄 Resume Upload\", category: \"talent\" },\r\n//     {\r\n//       id: \"candidate-matching\",\r\n//       label: \"🎯 Smart Matching\",\r\n//       category: \"talent\",\r\n//     },\r\n//     {\r\n//       id: \"candidate-database\",\r\n//       label: \"👥 Candidate Database\",\r\n//       category: \"talent\",\r\n//     },\r\n//     {\r\n//       id: \"test-scheduler\",\r\n//       label: \"📄 Test Scheduler\",\r\n//       category: \"talent\",\r\n//     },\r\n//     {\r\n//       id: \"interview-scheduler\",\r\n//       label: \"📅 Interview Scheduler\",\r\n//       category: \"talent\",\r\n//     },\r\n//     {\r\n//       id: \"onboarding-mail\",\r\n//       label: \"📧 Onboarding Mail\",\r\n//       category: \"talent\",\r\n//     },\r\n//     { id: \"flight-search\", label: \"✈️ Flight Search\", category: \"travel\" },\r\n//     {\r\n//       id: \"travel-dashboard\",\r\n//       label: \"🗺️ Travel Dashboard\",\r\n//       category: \"travel\",\r\n//     },\r\n//   ];\r\n\r\n//   const renderPage = () => {\r\n//     const pageProps = { socket, sendMessage, isConnected, messages };\r\n\r\n//     switch (currentPage) {\r\n//       case \"dashboard\":\r\n//         return <Dashboard {...pageProps} />;\r\n//       case \"job-generator\":\r\n//         return <JobGenerator {...pageProps} />;\r\n//       case \"resume-upload\":\r\n//         return <ResumeUpload {...pageProps} />;\r\n//       case \"candidate-matching\":\r\n//         return <CandidateMatching {...pageProps} />;\r\n//       case \"candidate-database\":\r\n//         return <CandidateDatabase {...pageProps} />;\r\n//       case \"interview-scheduler\":\r\n//         return <InterviewScheduler {...pageProps} />;\r\n//       case \"flight-search\":\r\n//         return <FlightSearch {...pageProps} />;\r\n//       case \"travel-dashboard\":\r\n//         return <TravelDashboard {...pageProps} />;\r\n//       default:\r\n//         return <Dashboard {...pageProps} />;\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"app-container\">\r\n//       {/* Header */}\r\n//       <header className=\"app-header\">\r\n//         <div className=\"header-content\">\r\n//           <div className=\"logo-section\">\r\n//             <h1>NaviHire</h1>\r\n//             <span className=\"tagline\">\r\n//               AI-Powered Talent & Travel Intelligence\r\n//             </span>\r\n//           </div>\r\n//           <div className=\"user-section\">\r\n//             {/* <div className={`connection-status ${isConnected ? 'connected' : 'disconnected'}`}>\r\n//               <span className=\"status-dot\"></span>\r\n//               {isConnected ? 'AI Connected' : 'Connecting...'}\r\n//             </div> */}\r\n//             <ConnectionStatus\r\n//               status={connectionStatus}\r\n//               onReconnect={reconnect}\r\n//               lastActivity={lastActivity}\r\n//             />\r\n//             <div className=\"user-info\">\r\n//               <span>👤 {user.name}</span>\r\n//               {/* <div className=\"user-avatar\">👤</div> */}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </header>\r\n\r\n//       <div className=\"main-layout\">\r\n//         {/* Sidebar Navigation */}\r\n//         <nav className=\"sidebar\">\r\n//           <div className=\"nav-section\">\r\n//             <h3>Main</h3>\r\n//             {menuItems\r\n//               .filter((item) => item.category === \"main\")\r\n//               .map((item) => (\r\n//                 <button\r\n//                   key={item.id}\r\n//                   className={`nav-item ${\r\n//                     currentPage === item.id ? \"active\" : \"\"\r\n//                   }`}\r\n//                   onClick={() => setCurrentPage(item.id)}\r\n//                 >\r\n//                   {item.label}\r\n//                 </button>\r\n//               ))}\r\n//           </div>\r\n\r\n//           <div className=\"nav-section\">\r\n//             <h3>Talent Acquisition</h3>\r\n//             {menuItems\r\n//               .filter((item) => item.category === \"talent\")\r\n//               .map((item) => (\r\n//                 <button\r\n//                   key={item.id}\r\n//                   className={`nav-item ${\r\n//                     currentPage === item.id ? \"active\" : \"\"\r\n//                   }`}\r\n//                   onClick={() => setCurrentPage(item.id)}\r\n//                 >\r\n//                   {item.label}\r\n//                 </button>\r\n//               ))}\r\n//           </div>\r\n\r\n//           <div className=\"nav-section\">\r\n//             <h3>Travel Intelligence</h3>\r\n//             {menuItems\r\n//               .filter((item) => item.category === \"travel\")\r\n//               .map((item) => (\r\n//                 <button\r\n//                   key={item.id}\r\n//                   className={`nav-item ${\r\n//                     currentPage === item.id ? \"active\" : \"\"\r\n//                   }`}\r\n//                   onClick={() => setCurrentPage(item.id)}\r\n//                 >\r\n//                   {item.label}\r\n//                 </button>\r\n//               ))}\r\n//           </div>\r\n//         </nav>\r\n\r\n//         {/* Main Content */}\r\n//         <main className=\"main-content\">{renderPage()}</main>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}