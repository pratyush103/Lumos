{"ast":null,"code":"var _jsxFileName = \"D:\\\\Navikenz\\\\pro\\\\navihire\\\\frontend\\\\src\\\\components\\\\FlightSearch.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// interface FlightSearchProps {\n//   socket: WebSocket | null;\n//   sendMessage: (message: string) => void;\n//   isConnected: boolean;\n// }\n\n// interface FlightResult {\n//   airline: string;\n//   price: string;\n//   time: string;\n//   duration: string;\n//   flightNumber: string;\n//   route: string;\n//   bookingUrl?: string;\n//   stops?: number;\n//   aircraft?: string;\n//   source: string;\n//   scraped: boolean;\n// }\n\n// const FlightSearch: React.FC<FlightSearchProps> = ({ socket, sendMessage, isConnected }) => {\n//   const [origin, setOrigin] = useState('');\n//   const [destination, setDestination] = useState('');\n//   const [date, setDate] = useState('');\n//   const [passengers, setPassengers] = useState('1');\n//   const [travelClass, setTravelClass] = useState('economy');\n//   const [searching, setSearching] = useState(false);\n//   const [results, setResults] = useState<FlightResult[]>([]);\n//   const [searchId, setSearchId] = useState('');\n//   const [aiAnalysis, setAiAnalysis] = useState('');\n\n//   // Listen for WebSocket messages\n//   useEffect(() => {\n//     if (socket) {\n//       const handleMessage = (event: MessageEvent) => {\n//         try {\n//           const data = JSON.parse(event.data);\n\n//           if (data.type === 'message' && data.agent_used === 'flight_agent') {\n//             setSearching(false);\n\n//             // Parse flight results from AI response\n//             if (data.flight_results && data.flight_results.length > 0) {\n//               const enhancedResults = data.flight_results.map((flight: any, index: number) => ({\n//                 ...flight,\n//                 bookingUrl: generateBookingUrl(flight, origin, destination, date),\n//                 flightNumber: flight.flight_number || `${flight.airline.substring(0, 2).toUpperCase()}-${Math.floor(Math.random() * 900) + 100}`\n//               }));\n//               setResults(enhancedResults);\n//             }\n\n//             // Set AI analysis\n//             if (data.ai_analysis) {\n//               setAiAnalysis(data.ai_analysis);\n//             }\n\n//             // Handle screenshot if available\n//             if (data.screenshot_path) {\n//               console.log('Screenshot available:', data.screenshot_path);\n//             }\n//           }\n//         } catch (error) {\n//           console.error('Error parsing WebSocket message:', error);\n//         }\n//       };\n\n//       socket.addEventListener('message', handleMessage);\n//       return () => socket.removeEventListener('message', handleMessage);\n//     }\n//   }, [socket, origin, destination, date]);\n\n//   const generateBookingUrl = (flight: any, origin: string, destination: string, date: string) => {\n//     const airline = flight.airline.toLowerCase();\n\n//     // Generate booking URLs based on airline\n//     if (airline.includes('indigo')) {\n//       return `https://www.goindigo.in/booking/flight-select?origin=${origin}&destination=${destination}&departure=${date}&passengers=${passengers}&class=${travelClass}`;\n//     } else if (airline.includes('air india')) {\n//       return `https://www.airindia.in/booking?from=${origin}&to=${destination}&date=${date}&pax=${passengers}&class=${travelClass}`;\n//     } else if (airline.includes('spicejet')) {\n//       return `https://www.spicejet.com/flight-booking?origin=${origin}&destination=${destination}&departure=${date}&passengers=${passengers}`;\n//     } else if (airline.includes('vistara')) {\n//       return `https://www.airvistara.com/booking/flight-search?origin=${origin}&destination=${destination}&date=${date}&passengers=${passengers}`;\n//     } else {\n//       // Generic booking URL for other airlines\n//       return `https://www.makemytrip.com/flight/search?itinerary=${origin}-${destination}-${date}&tripType=O&paxType=A-${passengers}_C-0_I-0&intl=false&class=${travelClass.toUpperCase()}`;\n//     }\n//   };\n\n//   const handleSearch = async () => {\n//     if (!origin || !destination) {\n//       alert('Please enter both origin and destination');\n//       return;\n//     }\n\n//     if (!isConnected) {\n//       alert('AI assistant is not connected. Please wait for connection.');\n//       return;\n//     }\n\n//     setSearching(true);\n//     setResults([]);\n//     setAiAnalysis('');\n\n//     const currentSearchId = Date.now().toString();\n//     setSearchId(currentSearchId);\n\n//     // Format date for AI\n//     const searchDate = date || new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n\n//     // Send comprehensive search request to AI\n//     const searchQuery = `Search flights from ${origin} to ${destination} on ${searchDate} for ${passengers} passenger(s) in ${travelClass} class. Please provide real-time flight options with prices, timings, and booking recommendations.`;\n\n//     sendMessage(searchQuery);\n\n//     // Fallback timeout in case AI doesn't respond\n//     setTimeout(() => {\n//       if (searching) {\n//         setSearching(false);\n//         // Provide fallback data if AI doesn't respond\n//         const fallbackResults: FlightResult[] = [\n//           {\n//             airline: 'IndiGo',\n//             price: '₹8,500',\n//             time: '08:30 AM',\n//             duration: '2h 15m',\n//             flightNumber: '6E-234',\n//             route: `${origin} → ${destination}`,\n//             stops: 0,\n//             aircraft: 'A320',\n//             source: 'Fallback Data',\n//             scraped: false,\n//             bookingUrl: generateBookingUrl({ airline: 'IndiGo' }, origin, destination, searchDate)\n//           },\n//           {\n//             airline: 'Air India',\n//             price: '₹12,200',\n//             time: '02:15 PM',\n//             duration: '2h 30m',\n//             flightNumber: 'AI-131',\n//             route: `${origin} → ${destination}`,\n//             stops: 0,\n//             aircraft: 'A321',\n//             source: 'Fallback Data',\n//             scraped: false,\n//             bookingUrl: generateBookingUrl({ airline: 'Air India' }, origin, destination, searchDate)\n//           },\n//           {\n//             airline: 'SpiceJet',\n//             price: '₹7,800',\n//             time: '06:45 PM',\n//             duration: '2h 20m',\n//             flightNumber: 'SG-8194',\n//             route: `${origin} → ${destination}`,\n//             stops: 0,\n//             aircraft: 'B737',\n//             source: 'Fallback Data',\n//             scraped: false,\n//             bookingUrl: generateBookingUrl({ airline: 'SpiceJet' }, origin, destination, searchDate)\n//           }\n//         ];\n//         setResults(fallbackResults);\n//         setAiAnalysis('Using cached flight data. For real-time prices and availability, please click \"Book Now\" on your preferred flight.');\n//       }\n//     }, 10000); // 10 second timeout\n//   };\n\n//   const handleBookFlight = (flight: FlightResult) => {\n//     if (flight.bookingUrl) {\n//       // Open booking URL in new tab\n//       window.open(flight.bookingUrl, '_blank', 'noopener,noreferrer');\n\n//       // Send booking analytics to AI\n//       if (isConnected) {\n//         sendMessage(`User selected ${flight.airline} flight ${flight.flightNumber} for ${flight.price} from ${origin} to ${destination}`);\n//       }\n//     } else {\n//       alert('Booking URL not available for this flight. Please visit the airline website directly.');\n//     }\n//   };\n\n//   const getFlightStatusColor = (flight: FlightResult) => {\n//     if (flight.scraped) {\n//       return '#10b981'; // Green for live data\n//     } else {\n//       return '#f59e0b'; // Orange for fallback data\n//     }\n//   };\n\n//   return (\n//     <div className=\"flight-search\">\n//       <div className=\"page-header\">\n//         <h1>Flight Search</h1>\n//         <p>Real-time flight search with intelligent recommendations</p>\n//         {isConnected && (\n//           <div className=\"ai-status\">\n//             <span className=\"status-dot connected\"></span>\n//             AI Assistant Connected\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Search Form */}\n//       <div className=\"search-form\">\n//         <div className=\"form-grid\">\n//           <div className=\"form-group\">\n//             <label className=\"form-label\">From</label>\n//             <input \n//               type=\"text\" \n//               className=\"form-input\"\n//               placeholder=\"Delhi, Mumbai, Bangalore...\"\n//               value={origin}\n//               onChange={(e) => setOrigin(e.target.value)}\n//               list=\"airports-from\"\n//             />\n//             <datalist id=\"airports-from\">\n//               <option value=\"Delhi\">Delhi (DEL)</option>\n//               <option value=\"Mumbai\">Mumbai (BOM)</option>\n//               <option value=\"Bangalore\">Bangalore (BLR)</option>\n//               <option value=\"Chennai\">Chennai (MAA)</option>\n//               <option value=\"Kolkata\">Kolkata (CCU)</option>\n//               <option value=\"Hyderabad\">Hyderabad (HYD)</option>\n//               <option value=\"Pune\">Pune (PNQ)</option>\n//             </datalist>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label className=\"form-label\">To</label>\n//             <input \n//               type=\"text\" \n//               className=\"form-input\"\n//               placeholder=\"Delhi, Mumbai, Bangalore...\"\n//               value={destination}\n//               onChange={(e) => setDestination(e.target.value)}\n//               list=\"airports-to\"\n//             />\n//             <datalist id=\"airports-to\">\n//               <option value=\"Delhi\">Delhi (DEL)</option>\n//               <option value=\"Mumbai\">Mumbai (BOM)</option>\n//               <option value=\"Bangalore\">Bangalore (BLR)</option>\n//               <option value=\"Chennai\">Chennai (MAA)</option>\n//               <option value=\"Kolkata\">Kolkata (CCU)</option>\n//               <option value=\"Hyderabad\">Hyderabad (HYD)</option>\n//               <option value=\"Pune\">Pune (PNQ)</option>\n//             </datalist>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label className=\"form-label\">Departure Date</label>\n//             <input \n//               type=\"date\" \n//               className=\"form-input\"\n//               value={date}\n//               onChange={(e) => setDate(e.target.value)}\n//               min={new Date().toISOString().split('T')[0]}\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label className=\"form-label\">Passengers</label>\n//             <select \n//               className=\"form-input\"\n//               value={passengers}\n//               onChange={(e) => setPassengers(e.target.value)}\n//             >\n//               {[1,2,3,4,5,6,7,8,9].map(num => (\n//                 <option key={num} value={num}>{num} {num === 1 ? 'Passenger' : 'Passengers'}</option>\n//               ))}\n//             </select>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label className=\"form-label\">Class</label>\n//             <select \n//               className=\"form-input\"\n//               value={travelClass}\n//               onChange={(e) => setTravelClass(e.target.value)}\n//             >\n//               <option value=\"economy\">Economy</option>\n//               <option value=\"premium-economy\">Premium Economy</option>\n//               <option value=\"business\">Business</option>\n//               <option value=\"first\">First Class</option>\n//             </select>\n//           </div>\n//         </div>\n\n//         <div className=\"search-actions\">\n//           <button \n//             className=\"btn btn-primary search-btn\" \n//             onClick={handleSearch}\n//             disabled={searching || !isConnected}\n//           >\n//             {searching ? (\n//               <>\n//                 <div className=\"spinner-small\"></div>\n//                 Searching...\n//               </>\n//             ) : (\n//               'Search Flights'\n//             )}\n//           </button>\n\n//           {!isConnected && (\n//             <p className=\"connection-warning\">\n//               ⚠️ AI assistant disconnected. Reconnecting...\n//             </p>\n//           )}\n//         </div>\n//       </div>\n\n//       {/* AI Analysis */}\n//       {aiAnalysis && (\n//         <div className=\"ai-analysis\">\n//           <h3>🤖 AI Travel Insights</h3>\n//           <p>{aiAnalysis}</p>\n//         </div>\n//       )}\n\n//       {/* Flight Results */}\n//       {results.length > 0 && (\n//         <div className=\"flight-results\">\n//           <div className=\"results-header\">\n//             <h2>Flight Options</h2>\n//             <p>{results.length} flights found for {origin} → {destination}</p>\n//           </div>\n\n//           <div className=\"flights-grid\">\n//             {results.map((flight, index) => (\n//               <div key={index} className=\"flight-card\">\n//                 <div className=\"flight-header\">\n//                   <div className=\"airline-info\">\n//                     <h3>{flight.airline}</h3>\n//                     <span className=\"flight-number\">{flight.flightNumber}</span>\n//                   </div>\n//                   <div \n//                     className=\"data-source\"\n//                     style={{ color: getFlightStatusColor(flight) }}\n//                   >\n//                     {flight.scraped ? '🟢 Live Data' : '🟡 Cached Data'}\n//                   </div>\n//                 </div>\n\n//                 <div className=\"flight-details\">\n//                   <div className=\"time-info\">\n//                     <div className=\"departure\">\n//                       <span className=\"time\">{flight.time}</span>\n//                       <span className=\"airport\">{origin}</span>\n//                     </div>\n//                     <div className=\"duration\">\n//                       <span className=\"duration-text\">{flight.duration}</span>\n//                       <div className=\"flight-line\">\n//                         <div className=\"line\"></div>\n//                         <div className=\"plane\">✈️</div>\n//                       </div>\n//                       {flight.stops !== undefined && (\n//                         <span className=\"stops\">\n//                           {flight.stops === 0 ? 'Non-stop' : `${flight.stops} stop${flight.stops > 1 ? 's' : ''}`}\n//                         </span>\n//                       )}\n//                     </div>\n//                     <div className=\"arrival\">\n//                       <span className=\"time\">\n//                         {/* Calculate arrival time */}\n//                         {(() => {\n//                           const [hours, minutes] = flight.time.split(/[:\\s]/);\n//                           const [durationHours, durationMinutes] = flight.duration.match(/\\d+/g) || ['2', '0'];\n//                           const departureTime = new Date();\n//                           departureTime.setHours(parseInt(hours) + (flight.time.includes('PM') && hours !== '12' ? 12 : 0));\n//                           departureTime.setMinutes(parseInt(minutes));\n//                           departureTime.setHours(departureTime.getHours() + parseInt(durationHours));\n//                           departureTime.setMinutes(departureTime.getMinutes() + parseInt(durationMinutes));\n//                           return departureTime.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: true });\n//                         })()}\n//                       </span>\n//                       <span className=\"airport\">{destination}</span>\n//                     </div>\n//                   </div>\n\n//                   {flight.aircraft && (\n//                     <div className=\"aircraft-info\">\n//                       <span>Aircraft: {flight.aircraft}</span>\n//                     </div>\n//                   )}\n//                 </div>\n\n//                 <div className=\"flight-footer\">\n//                   <div className=\"price-section\">\n//                     <span className=\"price\">{flight.price}</span>\n//                     <span className=\"price-note\">per person</span>\n//                   </div>\n\n//                   <button \n//                     className=\"btn btn-success book-btn\"\n//                     onClick={() => handleBookFlight(flight)}\n//                   >\n//                     📅 Book Now\n//                   </button>\n//                 </div>\n\n//                 <div className=\"source-info\">\n//                   <small>Source: {flight.source}</small>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       )}\n\n//       {searching && (\n//         <div className=\"searching-indicator\">\n//           <div className=\"spinner\"></div>\n//           <h3>Searching for the best flights...</h3>\n//           <p>Analyzing real-time prices and availability</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default FlightSearch;\n\nimport React, { useState } from 'react';\nimport { flightService } from '../services/FlightService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlightSearch = ({\n  socket,\n  sendMessage,\n  isConnected\n}) => {\n  _s();\n  const [searchParams, setSearchParams] = useState({\n    origin: '',\n    destination: '',\n    departureDate: '',\n    passengers: 1,\n    class: 'economy'\n  });\n  const [flights, setFlights] = useState([]);\n  const [searching, setSearching] = useState(false);\n  const [searchFailed, setSearchFailed] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleInputChange = (field, value) => {\n    setSearchParams(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleSearch = async () => {\n    if (!searchParams.origin || !searchParams.destination) {\n      alert('Please enter both origin and destination');\n      return;\n    }\n    setSearching(true);\n    setSearchFailed(false);\n    setErrorMessage('');\n    setFlights([]);\n    try {\n      // Send AI message for logging\n      if (isConnected) {\n        sendMessage(`Searching flights from ${searchParams.origin} to ${searchParams.destination} on ${searchParams.departureDate}`);\n      }\n      const results = await flightService.searchFlights(searchParams);\n      if (results.length > 0) {\n        setFlights(results);\n        setSearchFailed(false);\n      } else {\n        setSearchFailed(true);\n        setErrorMessage('No flights found. Our flight search services are currently unavailable.');\n      }\n    } catch (error) {\n      console.error('Flight search error:', error);\n      setSearchFailed(true);\n      setErrorMessage('Flight search services are temporarily unavailable. Please try again later.');\n    } finally {\n      setSearching(false);\n    }\n  };\n  const handleSelectFlight = flight => {\n    // Log selection with AI\n    if (isConnected) {\n      sendMessage(`User selected ${flight.airline} flight ${flight.flightNumber} for ₹${flight.price}`);\n    }\n\n    // Open booking URL\n    window.open(flight.bookingUrl, '_blank', 'noopener,noreferrer');\n  };\n  const openSkyscanner = () => {\n    var _searchParams$departu;\n    const skyscannerUrl = `https://www.skyscanner.co.in/transport/flights/${searchParams.origin}/${searchParams.destination}/${(_searchParams$departu = searchParams.departureDate) === null || _searchParams$departu === void 0 ? void 0 : _searchParams$departu.replace(/-/g, '')}/?adults=${searchParams.passengers}&children=0&adultsv2=${searchParams.passengers}&childrenv2=&infants=0&cabinclass=${searchParams.class}&rtn=0`;\n    window.open(skyscannerUrl, '_blank', 'noopener,noreferrer');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flight-search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u2708\\uFE0F AI Flight Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Find the best flights with real-time data and AI assistance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Delhi, Mumbai, Bangalore...\",\n            value: searchParams.origin,\n            onChange: e => handleInputChange('origin', e.target.value),\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Mumbai, Chennai, Hyderabad...\",\n            value: searchParams.destination,\n            onChange: e => handleInputChange('destination', e.target.value),\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Departure Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: searchParams.departureDate,\n            onChange: e => handleInputChange('departureDate', e.target.value),\n            className: \"form-input\",\n            min: new Date().toISOString().split('T')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Passengers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: searchParams.passengers,\n            onChange: e => handleInputChange('passengers', parseInt(e.target.value)),\n            className: \"form-input\",\n            children: [1, 2, 3, 4, 5, 6].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: num,\n              children: [num, \" \", num === 1 ? 'Adult' : 'Adults']\n            }, num, true, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: searchParams.class,\n            onChange: e => handleInputChange('class', e.target.value),\n            className: \"form-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"economy\",\n              children: \"Economy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"business\",\n              children: \"Business\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"first\",\n              children: \"First Class\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleSearch,\n          disabled: searching || !searchParams.origin || !searchParams.destination,\n          children: searching ? '🔍 Searching...' : '🔍 Search Flights'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, this), searching && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Searching for the best flights...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Checking multiple sources for real-time prices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 9\n    }, this), searchFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-failed\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDEAB Flight Search Unavailable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Our real-time flight search is temporarily unavailable. You can search directly on Skyscanner:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-skyscanner\",\n          onClick: openSkyscanner,\n          children: \"\\uD83D\\uDD17 Search on Skyscanner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 9\n    }, this), flights.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flight-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u2708\\uFE0F Available Flights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Found \", flights.length, \" flights \\u2022 Real-time prices\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flights-list\",\n        children: flights.map((flight, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flight-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flight-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"airline-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: flight.airline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"flight-number\",\n                children: flight.flightNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `source-badge ${flight.source}`,\n                children: flight.source === 'serpapi' ? 'Live Data' : flight.source === 'scraping' ? 'Real-time' : 'Cached'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time\",\n                  children: flight.departureTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"airport\",\n                  children: searchParams.origin\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flight-path\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"duration\",\n                  children: flight.duration\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"path-line\",\n                  children: flight.stops === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"direct\",\n                    children: \"Direct\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stops\",\n                    children: [flight.stops, \" stop\", flight.stops > 1 ? 's' : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 639,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time\",\n                  children: flight.arrivalTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"airport\",\n                  children: searchParams.destination\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 645,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"price-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"price\",\n                children: flight.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-select\",\n                onClick: () => handleSelectFlight(flight),\n                children: \"Select Flight \\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 17\n          }, this)\n        }, flight.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-alternatives\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Want more options?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: openSkyscanner,\n          children: \"\\uD83D\\uDD17 View more on Skyscanner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 505,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightSearch, \"QSuVIAglgFWXnAM5eDwzpwPW59k=\");\n_c = FlightSearch;\nexport default FlightSearch;\nvar _c;\n$RefreshReg$(_c, \"FlightSearch\");","map":{"version":3,"names":["React","useState","flightService","jsxDEV","_jsxDEV","FlightSearch","socket","sendMessage","isConnected","_s","searchParams","setSearchParams","origin","destination","departureDate","passengers","class","flights","setFlights","searching","setSearching","searchFailed","setSearchFailed","errorMessage","setErrorMessage","handleInputChange","field","value","prev","handleSearch","alert","results","searchFlights","length","error","console","handleSelectFlight","flight","airline","flightNumber","price","window","open","bookingUrl","openSkyscanner","_searchParams$departu","skyscannerUrl","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","min","Date","toISOString","split","parseInt","map","num","onClick","disabled","index","source","departureTime","duration","stops","arrivalTime","id","_c","$RefreshReg$"],"sources":["D:/Navikenz/pro/navihire/frontend/src/components/FlightSearch.tsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// interface FlightSearchProps {\r\n//   socket: WebSocket | null;\r\n//   sendMessage: (message: string) => void;\r\n//   isConnected: boolean;\r\n// }\r\n\r\n// interface FlightResult {\r\n//   airline: string;\r\n//   price: string;\r\n//   time: string;\r\n//   duration: string;\r\n//   flightNumber: string;\r\n//   route: string;\r\n//   bookingUrl?: string;\r\n//   stops?: number;\r\n//   aircraft?: string;\r\n//   source: string;\r\n//   scraped: boolean;\r\n// }\r\n\r\n// const FlightSearch: React.FC<FlightSearchProps> = ({ socket, sendMessage, isConnected }) => {\r\n//   const [origin, setOrigin] = useState('');\r\n//   const [destination, setDestination] = useState('');\r\n//   const [date, setDate] = useState('');\r\n//   const [passengers, setPassengers] = useState('1');\r\n//   const [travelClass, setTravelClass] = useState('economy');\r\n//   const [searching, setSearching] = useState(false);\r\n//   const [results, setResults] = useState<FlightResult[]>([]);\r\n//   const [searchId, setSearchId] = useState('');\r\n//   const [aiAnalysis, setAiAnalysis] = useState('');\r\n\r\n//   // Listen for WebSocket messages\r\n//   useEffect(() => {\r\n//     if (socket) {\r\n//       const handleMessage = (event: MessageEvent) => {\r\n//         try {\r\n//           const data = JSON.parse(event.data);\r\n          \r\n//           if (data.type === 'message' && data.agent_used === 'flight_agent') {\r\n//             setSearching(false);\r\n            \r\n//             // Parse flight results from AI response\r\n//             if (data.flight_results && data.flight_results.length > 0) {\r\n//               const enhancedResults = data.flight_results.map((flight: any, index: number) => ({\r\n//                 ...flight,\r\n//                 bookingUrl: generateBookingUrl(flight, origin, destination, date),\r\n//                 flightNumber: flight.flight_number || `${flight.airline.substring(0, 2).toUpperCase()}-${Math.floor(Math.random() * 900) + 100}`\r\n//               }));\r\n//               setResults(enhancedResults);\r\n//             }\r\n            \r\n//             // Set AI analysis\r\n//             if (data.ai_analysis) {\r\n//               setAiAnalysis(data.ai_analysis);\r\n//             }\r\n            \r\n//             // Handle screenshot if available\r\n//             if (data.screenshot_path) {\r\n//               console.log('Screenshot available:', data.screenshot_path);\r\n//             }\r\n//           }\r\n//         } catch (error) {\r\n//           console.error('Error parsing WebSocket message:', error);\r\n//         }\r\n//       };\r\n\r\n//       socket.addEventListener('message', handleMessage);\r\n//       return () => socket.removeEventListener('message', handleMessage);\r\n//     }\r\n//   }, [socket, origin, destination, date]);\r\n\r\n//   const generateBookingUrl = (flight: any, origin: string, destination: string, date: string) => {\r\n//     const airline = flight.airline.toLowerCase();\r\n    \r\n//     // Generate booking URLs based on airline\r\n//     if (airline.includes('indigo')) {\r\n//       return `https://www.goindigo.in/booking/flight-select?origin=${origin}&destination=${destination}&departure=${date}&passengers=${passengers}&class=${travelClass}`;\r\n//     } else if (airline.includes('air india')) {\r\n//       return `https://www.airindia.in/booking?from=${origin}&to=${destination}&date=${date}&pax=${passengers}&class=${travelClass}`;\r\n//     } else if (airline.includes('spicejet')) {\r\n//       return `https://www.spicejet.com/flight-booking?origin=${origin}&destination=${destination}&departure=${date}&passengers=${passengers}`;\r\n//     } else if (airline.includes('vistara')) {\r\n//       return `https://www.airvistara.com/booking/flight-search?origin=${origin}&destination=${destination}&date=${date}&passengers=${passengers}`;\r\n//     } else {\r\n//       // Generic booking URL for other airlines\r\n//       return `https://www.makemytrip.com/flight/search?itinerary=${origin}-${destination}-${date}&tripType=O&paxType=A-${passengers}_C-0_I-0&intl=false&class=${travelClass.toUpperCase()}`;\r\n//     }\r\n//   };\r\n\r\n//   const handleSearch = async () => {\r\n//     if (!origin || !destination) {\r\n//       alert('Please enter both origin and destination');\r\n//       return;\r\n//     }\r\n\r\n//     if (!isConnected) {\r\n//       alert('AI assistant is not connected. Please wait for connection.');\r\n//       return;\r\n//     }\r\n\r\n//     setSearching(true);\r\n//     setResults([]);\r\n//     setAiAnalysis('');\r\n    \r\n//     const currentSearchId = Date.now().toString();\r\n//     setSearchId(currentSearchId);\r\n    \r\n//     // Format date for AI\r\n//     const searchDate = date || new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\r\n    \r\n//     // Send comprehensive search request to AI\r\n//     const searchQuery = `Search flights from ${origin} to ${destination} on ${searchDate} for ${passengers} passenger(s) in ${travelClass} class. Please provide real-time flight options with prices, timings, and booking recommendations.`;\r\n    \r\n//     sendMessage(searchQuery);\r\n    \r\n//     // Fallback timeout in case AI doesn't respond\r\n//     setTimeout(() => {\r\n//       if (searching) {\r\n//         setSearching(false);\r\n//         // Provide fallback data if AI doesn't respond\r\n//         const fallbackResults: FlightResult[] = [\r\n//           {\r\n//             airline: 'IndiGo',\r\n//             price: '₹8,500',\r\n//             time: '08:30 AM',\r\n//             duration: '2h 15m',\r\n//             flightNumber: '6E-234',\r\n//             route: `${origin} → ${destination}`,\r\n//             stops: 0,\r\n//             aircraft: 'A320',\r\n//             source: 'Fallback Data',\r\n//             scraped: false,\r\n//             bookingUrl: generateBookingUrl({ airline: 'IndiGo' }, origin, destination, searchDate)\r\n//           },\r\n//           {\r\n//             airline: 'Air India',\r\n//             price: '₹12,200',\r\n//             time: '02:15 PM',\r\n//             duration: '2h 30m',\r\n//             flightNumber: 'AI-131',\r\n//             route: `${origin} → ${destination}`,\r\n//             stops: 0,\r\n//             aircraft: 'A321',\r\n//             source: 'Fallback Data',\r\n//             scraped: false,\r\n//             bookingUrl: generateBookingUrl({ airline: 'Air India' }, origin, destination, searchDate)\r\n//           },\r\n//           {\r\n//             airline: 'SpiceJet',\r\n//             price: '₹7,800',\r\n//             time: '06:45 PM',\r\n//             duration: '2h 20m',\r\n//             flightNumber: 'SG-8194',\r\n//             route: `${origin} → ${destination}`,\r\n//             stops: 0,\r\n//             aircraft: 'B737',\r\n//             source: 'Fallback Data',\r\n//             scraped: false,\r\n//             bookingUrl: generateBookingUrl({ airline: 'SpiceJet' }, origin, destination, searchDate)\r\n//           }\r\n//         ];\r\n//         setResults(fallbackResults);\r\n//         setAiAnalysis('Using cached flight data. For real-time prices and availability, please click \"Book Now\" on your preferred flight.');\r\n//       }\r\n//     }, 10000); // 10 second timeout\r\n//   };\r\n\r\n//   const handleBookFlight = (flight: FlightResult) => {\r\n//     if (flight.bookingUrl) {\r\n//       // Open booking URL in new tab\r\n//       window.open(flight.bookingUrl, '_blank', 'noopener,noreferrer');\r\n      \r\n//       // Send booking analytics to AI\r\n//       if (isConnected) {\r\n//         sendMessage(`User selected ${flight.airline} flight ${flight.flightNumber} for ${flight.price} from ${origin} to ${destination}`);\r\n//       }\r\n//     } else {\r\n//       alert('Booking URL not available for this flight. Please visit the airline website directly.');\r\n//     }\r\n//   };\r\n\r\n//   const getFlightStatusColor = (flight: FlightResult) => {\r\n//     if (flight.scraped) {\r\n//       return '#10b981'; // Green for live data\r\n//     } else {\r\n//       return '#f59e0b'; // Orange for fallback data\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flight-search\">\r\n//       <div className=\"page-header\">\r\n//         <h1>Flight Search</h1>\r\n//         <p>Real-time flight search with intelligent recommendations</p>\r\n//         {isConnected && (\r\n//           <div className=\"ai-status\">\r\n//             <span className=\"status-dot connected\"></span>\r\n//             AI Assistant Connected\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Search Form */}\r\n//       <div className=\"search-form\">\r\n//         <div className=\"form-grid\">\r\n//           <div className=\"form-group\">\r\n//             <label className=\"form-label\">From</label>\r\n//             <input \r\n//               type=\"text\" \r\n//               className=\"form-input\"\r\n//               placeholder=\"Delhi, Mumbai, Bangalore...\"\r\n//               value={origin}\r\n//               onChange={(e) => setOrigin(e.target.value)}\r\n//               list=\"airports-from\"\r\n//             />\r\n//             <datalist id=\"airports-from\">\r\n//               <option value=\"Delhi\">Delhi (DEL)</option>\r\n//               <option value=\"Mumbai\">Mumbai (BOM)</option>\r\n//               <option value=\"Bangalore\">Bangalore (BLR)</option>\r\n//               <option value=\"Chennai\">Chennai (MAA)</option>\r\n//               <option value=\"Kolkata\">Kolkata (CCU)</option>\r\n//               <option value=\"Hyderabad\">Hyderabad (HYD)</option>\r\n//               <option value=\"Pune\">Pune (PNQ)</option>\r\n//             </datalist>\r\n//           </div>\r\n          \r\n//           <div className=\"form-group\">\r\n//             <label className=\"form-label\">To</label>\r\n//             <input \r\n//               type=\"text\" \r\n//               className=\"form-input\"\r\n//               placeholder=\"Delhi, Mumbai, Bangalore...\"\r\n//               value={destination}\r\n//               onChange={(e) => setDestination(e.target.value)}\r\n//               list=\"airports-to\"\r\n//             />\r\n//             <datalist id=\"airports-to\">\r\n//               <option value=\"Delhi\">Delhi (DEL)</option>\r\n//               <option value=\"Mumbai\">Mumbai (BOM)</option>\r\n//               <option value=\"Bangalore\">Bangalore (BLR)</option>\r\n//               <option value=\"Chennai\">Chennai (MAA)</option>\r\n//               <option value=\"Kolkata\">Kolkata (CCU)</option>\r\n//               <option value=\"Hyderabad\">Hyderabad (HYD)</option>\r\n//               <option value=\"Pune\">Pune (PNQ)</option>\r\n//             </datalist>\r\n//           </div>\r\n          \r\n//           <div className=\"form-group\">\r\n//             <label className=\"form-label\">Departure Date</label>\r\n//             <input \r\n//               type=\"date\" \r\n//               className=\"form-input\"\r\n//               value={date}\r\n//               onChange={(e) => setDate(e.target.value)}\r\n//               min={new Date().toISOString().split('T')[0]}\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label className=\"form-label\">Passengers</label>\r\n//             <select \r\n//               className=\"form-input\"\r\n//               value={passengers}\r\n//               onChange={(e) => setPassengers(e.target.value)}\r\n//             >\r\n//               {[1,2,3,4,5,6,7,8,9].map(num => (\r\n//                 <option key={num} value={num}>{num} {num === 1 ? 'Passenger' : 'Passengers'}</option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label className=\"form-label\">Class</label>\r\n//             <select \r\n//               className=\"form-input\"\r\n//               value={travelClass}\r\n//               onChange={(e) => setTravelClass(e.target.value)}\r\n//             >\r\n//               <option value=\"economy\">Economy</option>\r\n//               <option value=\"premium-economy\">Premium Economy</option>\r\n//               <option value=\"business\">Business</option>\r\n//               <option value=\"first\">First Class</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"search-actions\">\r\n//           <button \r\n//             className=\"btn btn-primary search-btn\" \r\n//             onClick={handleSearch}\r\n//             disabled={searching || !isConnected}\r\n//           >\r\n//             {searching ? (\r\n//               <>\r\n//                 <div className=\"spinner-small\"></div>\r\n//                 Searching...\r\n//               </>\r\n//             ) : (\r\n//               'Search Flights'\r\n//             )}\r\n//           </button>\r\n          \r\n//           {!isConnected && (\r\n//             <p className=\"connection-warning\">\r\n//               ⚠️ AI assistant disconnected. Reconnecting...\r\n//             </p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* AI Analysis */}\r\n//       {aiAnalysis && (\r\n//         <div className=\"ai-analysis\">\r\n//           <h3>🤖 AI Travel Insights</h3>\r\n//           <p>{aiAnalysis}</p>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Flight Results */}\r\n//       {results.length > 0 && (\r\n//         <div className=\"flight-results\">\r\n//           <div className=\"results-header\">\r\n//             <h2>Flight Options</h2>\r\n//             <p>{results.length} flights found for {origin} → {destination}</p>\r\n//           </div>\r\n          \r\n//           <div className=\"flights-grid\">\r\n//             {results.map((flight, index) => (\r\n//               <div key={index} className=\"flight-card\">\r\n//                 <div className=\"flight-header\">\r\n//                   <div className=\"airline-info\">\r\n//                     <h3>{flight.airline}</h3>\r\n//                     <span className=\"flight-number\">{flight.flightNumber}</span>\r\n//                   </div>\r\n//                   <div \r\n//                     className=\"data-source\"\r\n//                     style={{ color: getFlightStatusColor(flight) }}\r\n//                   >\r\n//                     {flight.scraped ? '🟢 Live Data' : '🟡 Cached Data'}\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <div className=\"flight-details\">\r\n//                   <div className=\"time-info\">\r\n//                     <div className=\"departure\">\r\n//                       <span className=\"time\">{flight.time}</span>\r\n//                       <span className=\"airport\">{origin}</span>\r\n//                     </div>\r\n//                     <div className=\"duration\">\r\n//                       <span className=\"duration-text\">{flight.duration}</span>\r\n//                       <div className=\"flight-line\">\r\n//                         <div className=\"line\"></div>\r\n//                         <div className=\"plane\">✈️</div>\r\n//                       </div>\r\n//                       {flight.stops !== undefined && (\r\n//                         <span className=\"stops\">\r\n//                           {flight.stops === 0 ? 'Non-stop' : `${flight.stops} stop${flight.stops > 1 ? 's' : ''}`}\r\n//                         </span>\r\n//                       )}\r\n//                     </div>\r\n//                     <div className=\"arrival\">\r\n//                       <span className=\"time\">\r\n//                         {/* Calculate arrival time */}\r\n//                         {(() => {\r\n//                           const [hours, minutes] = flight.time.split(/[:\\s]/);\r\n//                           const [durationHours, durationMinutes] = flight.duration.match(/\\d+/g) || ['2', '0'];\r\n//                           const departureTime = new Date();\r\n//                           departureTime.setHours(parseInt(hours) + (flight.time.includes('PM') && hours !== '12' ? 12 : 0));\r\n//                           departureTime.setMinutes(parseInt(minutes));\r\n//                           departureTime.setHours(departureTime.getHours() + parseInt(durationHours));\r\n//                           departureTime.setMinutes(departureTime.getMinutes() + parseInt(durationMinutes));\r\n//                           return departureTime.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: true });\r\n//                         })()}\r\n//                       </span>\r\n//                       <span className=\"airport\">{destination}</span>\r\n//                     </div>\r\n//                   </div>\r\n                  \r\n//                   {flight.aircraft && (\r\n//                     <div className=\"aircraft-info\">\r\n//                       <span>Aircraft: {flight.aircraft}</span>\r\n//                     </div>\r\n//                   )}\r\n//                 </div>\r\n                \r\n//                 <div className=\"flight-footer\">\r\n//                   <div className=\"price-section\">\r\n//                     <span className=\"price\">{flight.price}</span>\r\n//                     <span className=\"price-note\">per person</span>\r\n//                   </div>\r\n                  \r\n//                   <button \r\n//                     className=\"btn btn-success book-btn\"\r\n//                     onClick={() => handleBookFlight(flight)}\r\n//                   >\r\n//                     📅 Book Now\r\n//                   </button>\r\n//                 </div>\r\n                \r\n//                 <div className=\"source-info\">\r\n//                   <small>Source: {flight.source}</small>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {searching && (\r\n//         <div className=\"searching-indicator\">\r\n//           <div className=\"spinner\"></div>\r\n//           <h3>Searching for the best flights...</h3>\r\n//           <p>Analyzing real-time prices and availability</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FlightSearch;\r\n\r\nimport React, { useState } from 'react';\r\nimport { flightService, FlightResult, FlightSearchParams } from '../services/FlightService';\r\n\r\ninterface FlightSearchProps {\r\n  socket: WebSocket | null;\r\n  sendMessage: (message: string) => void;\r\n  isConnected: boolean;\r\n}\r\n\r\nconst FlightSearch: React.FC<FlightSearchProps> = ({ socket, sendMessage, isConnected }) => {\r\n  const [searchParams, setSearchParams] = useState<FlightSearchParams>({\r\n    origin: '',\r\n    destination: '',\r\n    departureDate: '',\r\n    passengers: 1,\r\n    class: 'economy'\r\n  });\r\n  \r\n  const [flights, setFlights] = useState<FlightResult[]>([]);\r\n  const [searching, setSearching] = useState(false);\r\n  const [searchFailed, setSearchFailed] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleInputChange = (field: keyof FlightSearchParams, value: string | number) => {\r\n    setSearchParams(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!searchParams.origin || !searchParams.destination) {\r\n      alert('Please enter both origin and destination');\r\n      return;\r\n    }\r\n\r\n    setSearching(true);\r\n    setSearchFailed(false);\r\n    setErrorMessage('');\r\n    setFlights([]);\r\n\r\n    try {\r\n      // Send AI message for logging\r\n      if (isConnected) {\r\n        sendMessage(`Searching flights from ${searchParams.origin} to ${searchParams.destination} on ${searchParams.departureDate}`);\r\n      }\r\n\r\n      const results = await flightService.searchFlights(searchParams);\r\n      \r\n      if (results.length > 0) {\r\n        setFlights(results);\r\n        setSearchFailed(false);\r\n      } else {\r\n        setSearchFailed(true);\r\n        setErrorMessage('No flights found. Our flight search services are currently unavailable.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Flight search error:', error);\r\n      setSearchFailed(true);\r\n      setErrorMessage('Flight search services are temporarily unavailable. Please try again later.');\r\n    } finally {\r\n      setSearching(false);\r\n    }\r\n  };\r\n\r\n  const handleSelectFlight = (flight: FlightResult) => {\r\n    // Log selection with AI\r\n    if (isConnected) {\r\n      sendMessage(`User selected ${flight.airline} flight ${flight.flightNumber} for ₹${flight.price}`);\r\n    }\r\n\r\n    // Open booking URL\r\n    window.open(flight.bookingUrl, '_blank', 'noopener,noreferrer');\r\n  };\r\n\r\n  const openSkyscanner = () => {\r\n    const skyscannerUrl = `https://www.skyscanner.co.in/transport/flights/${searchParams.origin}/${searchParams.destination}/${searchParams.departureDate?.replace(/-/g, '')}/?adults=${searchParams.passengers}&children=0&adultsv2=${searchParams.passengers}&childrenv2=&infants=0&cabinclass=${searchParams.class}&rtn=0`;\r\n    window.open(skyscannerUrl, '_blank', 'noopener,noreferrer');\r\n  };\r\n\r\n  return (\r\n    <div className=\"flight-search\">\r\n      <div className=\"page-header\">\r\n        <h1>✈️ AI Flight Search</h1>\r\n        <p>Find the best flights with real-time data and AI assistance</p>\r\n      </div>\r\n\r\n      {/* Search Form */}\r\n      <div className=\"search-form\">\r\n        <div className=\"form-grid\">\r\n          <div className=\"form-group\">\r\n            <label>From</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Delhi, Mumbai, Bangalore...\"\r\n              value={searchParams.origin}\r\n              onChange={(e) => handleInputChange('origin', e.target.value)}\r\n              className=\"form-input\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>To</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Mumbai, Chennai, Hyderabad...\"\r\n              value={searchParams.destination}\r\n              onChange={(e) => handleInputChange('destination', e.target.value)}\r\n              className=\"form-input\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Departure Date</label>\r\n            <input\r\n              type=\"date\"\r\n              value={searchParams.departureDate}\r\n              onChange={(e) => handleInputChange('departureDate', e.target.value)}\r\n              className=\"form-input\"\r\n              min={new Date().toISOString().split('T')[0]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Passengers</label>\r\n            <select\r\n              value={searchParams.passengers}\r\n              onChange={(e) => handleInputChange('passengers', parseInt(e.target.value))}\r\n              className=\"form-input\"\r\n            >\r\n              {[1,2,3,4,5,6].map(num => (\r\n                <option key={num} value={num}>{num} {num === 1 ? 'Adult' : 'Adults'}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Class</label>\r\n            <select\r\n              value={searchParams.class}\r\n              onChange={(e) => handleInputChange('class', e.target.value)}\r\n              className=\"form-input\"\r\n            >\r\n              <option value=\"economy\">Economy</option>\r\n              <option value=\"business\">Business</option>\r\n              <option value=\"first\">First Class</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"search-actions\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={handleSearch}\r\n            disabled={searching || !searchParams.origin || !searchParams.destination}\r\n          >\r\n            {searching ? '🔍 Searching...' : '🔍 Search Flights'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Search Results */}\r\n      {searching && (\r\n        <div className=\"search-status\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Searching for the best flights...</p>\r\n          <small>Checking multiple sources for real-time prices</small>\r\n        </div>\r\n      )}\r\n\r\n      {searchFailed && (\r\n        <div className=\"search-failed\">\r\n          <div className=\"error-message\">\r\n            <h3>🚫 Flight Search Unavailable</h3>\r\n            <p>{errorMessage}</p>\r\n            <p>Our real-time flight search is temporarily unavailable. You can search directly on Skyscanner:</p>\r\n            \r\n            <button className=\"btn btn-skyscanner\" onClick={openSkyscanner}>\r\n              🔗 Search on Skyscanner\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {flights.length > 0 && (\r\n        <div className=\"flight-results\">\r\n          <div className=\"results-header\">\r\n            <h3>✈️ Available Flights</h3>\r\n            <p>Found {flights.length} flights • Real-time prices</p>\r\n          </div>\r\n\r\n          <div className=\"flights-list\">\r\n            {flights.map((flight, index) => (\r\n              <div key={flight.id} className=\"flight-card\">\r\n                <div className=\"flight-info\">\r\n                  <div className=\"airline-section\">\r\n                    <h4>{flight.airline}</h4>\r\n                    <span className=\"flight-number\">{flight.flightNumber}</span>\r\n                    <span className={`source-badge ${flight.source}`}>\r\n                      {flight.source === 'serpapi' ? 'Live Data' : \r\n                       flight.source === 'scraping' ? 'Real-time' : 'Cached'}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"time-section\">\r\n                    <div className=\"time-info\">\r\n                      <span className=\"time\">{flight.departureTime}</span>\r\n                      <span className=\"airport\">{searchParams.origin}</span>\r\n                    </div>\r\n                    <div className=\"flight-path\">\r\n                      <span className=\"duration\">{flight.duration}</span>\r\n                      <div className=\"path-line\">\r\n                        {flight.stops === 0 ? (\r\n                          <span className=\"direct\">Direct</span>\r\n                        ) : (\r\n                          <span className=\"stops\">{flight.stops} stop{flight.stops > 1 ? 's' : ''}</span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"time-info\">\r\n                      <span className=\"time\">{flight.arrivalTime}</span>\r\n                      <span className=\"airport\">{searchParams.destination}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"price-section\">\r\n                    <div className=\"price\">{flight.price}</div>\r\n                    <button\r\n                      className=\"btn btn-select\"\r\n                      onClick={() => handleSelectFlight(flight)}\r\n                    >\r\n                      Select Flight →\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"search-alternatives\">\r\n            <p>Want more options?</p>\r\n            <button className=\"btn btn-secondary\" onClick={openSkyscanner}>\r\n              🔗 View more on Skyscanner\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlightSearch;"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAA0C,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ5F,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,MAAM;EAAEC,WAAW;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC1F,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAqB;IACnEW,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,EAAE;IACfC,aAAa,EAAE,EAAE;IACjBC,UAAU,EAAE,CAAC;IACbC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAiB,EAAE,CAAC;EAC1D,MAAM,CAACkB,SAAS,EAAEC,YAAY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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}