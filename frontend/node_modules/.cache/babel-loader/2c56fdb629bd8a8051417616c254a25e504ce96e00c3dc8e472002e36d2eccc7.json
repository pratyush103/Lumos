{"ast":null,"code":"var _jsxFileName = \"D:\\\\Navikenz\\\\pro\\\\navihire\\\\frontend\\\\src\\\\components\\\\InterviewScheduler.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InterviewScheduler = ({\n  socket,\n  sendMessage,\n  isConnected\n}) => {\n  _s();\n  const [selectedCandidate, setSelectedCandidate] = useState('');\n  const [interviewDate, setInterviewDate] = useState('');\n  const [interviewTime, setInterviewTime] = useState('');\n  const scheduleInterview = () => {\n    if (!selectedCandidate || !interviewDate || !interviewTime) {\n      alert('Please fill all fields');\n      return;\n    }\n    alert(`Interview scheduled for ${selectedCandidate} on ${interviewDate} at ${interviewTime}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCC5 Interview Scheduler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Schedule and manage candidate interviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Candidate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCandidate,\n          onChange: e => setSelectedCandidate(e.target.value),\n          className: \"form-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Candidate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"John Doe\",\n            children: \"John Doe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Jane Smith\",\n            children: \"Jane Smith\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mike Johnson\",\n            children: \"Mike Johnson\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: interviewDate,\n          onChange: e => setInterviewDate(e.target.value),\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: interviewTime,\n          onChange: e => setInterviewTime(e.target.value),\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: scheduleInterview,\n      children: \"Schedule Interview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(InterviewScheduler, \"esgWaMDf74VQjEDdJ7Lj4qjC67M=\");\n_c = InterviewScheduler;\nexport default InterviewScheduler;\nvar _c;\n$RefreshReg$(_c, \"InterviewScheduler\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InterviewScheduler","socket","sendMessage","isConnected","_s","selectedCandidate","setSelectedCandidate","interviewDate","setInterviewDate","interviewTime","setInterviewTime","scheduleInterview","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","e","target","type","onClick","_c","$RefreshReg$"],"sources":["D:/Navikenz/pro/navihire/frontend/src/components/InterviewScheduler.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\ninterface InterviewSchedulerProps {\r\n  socket: WebSocket | null;\r\n  sendMessage: (message: string) => void;\r\n  isConnected: boolean;\r\n}\r\n\r\nconst InterviewScheduler: React.FC<InterviewSchedulerProps> = ({ socket, sendMessage, isConnected }) => {\r\n  const [selectedCandidate, setSelectedCandidate] = useState('');\r\n  const [interviewDate, setInterviewDate] = useState('');\r\n  const [interviewTime, setInterviewTime] = useState('');\r\n\r\n  const scheduleInterview = () => {\r\n    if (!selectedCandidate || !interviewDate || !interviewTime) {\r\n      alert('Please fill all fields');\r\n      return;\r\n    }\r\n    \r\n    alert(`Interview scheduled for ${selectedCandidate} on ${interviewDate} at ${interviewTime}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>ðŸ“… Interview Scheduler</h2>\r\n      <p>Schedule and manage candidate interviews</p>\r\n      \r\n      <div className=\"form-grid\">\r\n        <div className=\"form-group\">\r\n          <label>Candidate</label>\r\n          <select\r\n            value={selectedCandidate}\r\n            onChange={(e) => setSelectedCandidate(e.target.value)}\r\n            className=\"form-input\"\r\n          >\r\n            <option value=\"\">Select Candidate</option>\r\n            <option value=\"John Doe\">John Doe</option>\r\n            <option value=\"Jane Smith\">Jane Smith</option>\r\n            <option value=\"Mike Johnson\">Mike Johnson</option>\r\n          </select>\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={interviewDate}\r\n            onChange={(e) => setInterviewDate(e.target.value)}\r\n            className=\"form-input\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label>Time</label>\r\n          <input\r\n            type=\"time\"\r\n            value={interviewTime}\r\n            onChange={(e) => setInterviewTime(e.target.value)}\r\n            className=\"form-input\"\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <button className=\"btn btn-primary\" onClick={scheduleInterview}>\r\n        Schedule Interview\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterviewScheduler;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}