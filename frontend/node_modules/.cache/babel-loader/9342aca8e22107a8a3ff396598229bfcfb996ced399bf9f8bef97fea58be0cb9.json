{"ast":null,"code":"var _jsxFileName = \"D:\\\\Navikenz\\\\pro\\\\navihire\\\\frontend\\\\src\\\\components\\\\CandidateMatching.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CandidateMatching = ({\n  socket,\n  sendMessage,\n  isConnected\n}) => {\n  _s();\n  const [jobDescription, setJobDescription] = useState('');\n  const [candidates, setCandidates] = useState([]);\n  const [matchResults, setMatchResults] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFAF Smart Candidate Matching\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"AI-powered candidate ranking and job matching\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Job Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: jobDescription,\n        onChange: e => setJobDescription(e.target.value),\n        placeholder: \"Paste job description here...\",\n        className: \"form-textarea\",\n        rows: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      children: \"\\uD83E\\uDD16 Find Matching Candidates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(CandidateMatching, \"qr2NZtJQCexI+kMm3r0OInKtxwM=\");\n_c = CandidateMatching;\nexport default CandidateMatching;\nvar _c;\n$RefreshReg$(_c, \"CandidateMatching\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CandidateMatching","socket","sendMessage","isConnected","_s","jobDescription","setJobDescription","candidates","setCandidates","matchResults","setMatchResults","children","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","e","target","placeholder","rows","_c","$RefreshReg$"],"sources":["D:/Navikenz/pro/navihire/frontend/src/components/CandidateMatching.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\ninterface CandidateMatchingProps {\r\n  socket: WebSocket | null;\r\n  sendMessage: (message: string) => void;\r\n  isConnected: boolean;\r\n}\r\n\r\nconst CandidateMatching: React.FC<CandidateMatchingProps> = ({ socket, sendMessage, isConnected }) => {\r\n  const [jobDescription, setJobDescription] = useState('');\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [matchResults, setMatchResults] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>ðŸŽ¯ Smart Candidate Matching</h2>\r\n      <p>AI-powered candidate ranking and job matching</p>\r\n      \r\n      <div className=\"form-group\">\r\n        <label>Job Description</label>\r\n        <textarea\r\n          value={jobDescription}\r\n          onChange={(e) => setJobDescription(e.target.value)}\r\n          placeholder=\"Paste job description here...\"\r\n          className=\"form-textarea\"\r\n          rows={5}\r\n        />\r\n      </div>\r\n      \r\n      <button className=\"btn btn-primary\">\r\n        ðŸ¤– Find Matching Candidates\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CandidateMatching;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQxC,MAAMC,iBAAmD,GAAGA,CAAC;EAAEC,MAAM;EAAEC,WAAW;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACpG,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpD,oBACEE,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpChB,OAAA;MAAAY,QAAA,EAAG;IAA6C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEpDhB,OAAA;MAAKiB,SAAS,EAAC,YAAY;MAAAL,QAAA,gBACzBZ,OAAA;QAAAY,QAAA,EAAO;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9BhB,OAAA;QACEkB,KAAK,EAAEZ,cAAe;QACtBa,QAAQ,EAAGC,CAAC,IAAKb,iBAAiB,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACnDI,WAAW,EAAC,+BAA+B;QAC3CL,SAAS,EAAC,eAAe;QACzBM,IAAI,EAAE;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENhB,OAAA;MAAQiB,SAAS,EAAC,iBAAiB;MAAAL,QAAA,EAAC;IAEpC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACX,EAAA,CA1BIJ,iBAAmD;AAAAuB,EAAA,GAAnDvB,iBAAmD;AA4BzD,eAAeA,iBAAiB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}