{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport const useWebSocket = url => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    // WebSocket connection logic here\n    return () => {\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, [url]);\n  return {\n    socket,\n    isConnected\n  };\n};\n_s(useWebSocket, \"QMiDLkz4HTcH977k6GWSjZyAdcs=\");","map":{"version":3,"names":["useState","useEffect","useWebSocket","url","_s","socket","setSocket","isConnected","setIsConnected","close"],"sources":["D:/Navikenz/pro/navihire/frontend/src/hooks/useWebSocket.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport const useWebSocket = (url: string) => {\r\n  const [socket, setSocket] = useState<WebSocket | null>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // WebSocket connection logic here\r\n    return () => {\r\n      if (socket) {\r\n        socket.close();\r\n      }\r\n    };\r\n  }, [url]);\r\n\r\n  return { socket, isConnected };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,MAAMC,YAAY,GAAIC,GAAW,IAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAmB,IAAI,CAAC;EAC5D,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd;IACA,OAAO,MAAM;MACX,IAAII,MAAM,EAAE;QACVA,MAAM,CAACI,KAAK,CAAC,CAAC;MAChB;IACF,CAAC;EACH,CAAC,EAAE,CAACN,GAAG,CAAC,CAAC;EAET,OAAO;IAAEE,MAAM;IAAEE;EAAY,CAAC;AAChC,CAAC;AAACH,EAAA,CAdWF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}