{"ast":null,"code":"var _jsxFileName = \"D:\\\\Navikenz\\\\pro\\\\navihire\\\\frontend\\\\src\\\\components\\\\common\\\\ConnectionStatus.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionStatus = ({\n  status,\n  onReconnect,\n  lastActivity\n}) => {\n  const getStatusInfo = () => {\n    switch (status) {\n      case 'connected':\n        return {\n          icon: 'ðŸŸ¢',\n          text: 'Connected',\n          color: '#10b981',\n          showReconnect: false\n        };\n      case 'connecting':\n        return {\n          icon: 'ðŸŸ¡',\n          text: 'Connecting...',\n          color: '#f59e0b',\n          showReconnect: false\n        };\n      case 'reconnecting':\n        return {\n          icon: 'ðŸ”„',\n          text: 'Reconnecting...',\n          color: '#f59e0b',\n          showReconnect: false\n        };\n      case 'disconnected':\n        return {\n          icon: 'ðŸ”´',\n          text: 'Disconnected',\n          color: '#ef4444',\n          showReconnect: true\n        };\n      default:\n        return {\n          icon: 'âšª',\n          text: 'Unknown',\n          color: '#6b7280',\n          showReconnect: true\n        };\n    }\n  };\n  const statusInfo = getStatusInfo();\n  const lastActivityText = lastActivity ? `Last activity: ${lastActivity.toLocaleTimeString()}` : 'No activity';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connection-status\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status-icon\",\n        children: statusInfo.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status-text\",\n        style: {\n          color: statusInfo.color\n        },\n        children: statusInfo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), statusInfo.showReconnect && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reconnect-button\",\n        onClick: onReconnect,\n        title: \"Click to reconnect\",\n        children: \"\\uD83D\\uDD04 Reconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"last-activity\",\n      title: lastActivityText,\n      children: lastActivity && /*#__PURE__*/_jsxDEV(\"small\", {\n        children: lastActivityText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_c = ConnectionStatus;\nexport default ConnectionStatus;\nvar _c;\n$RefreshReg$(_c, \"ConnectionStatus\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ConnectionStatus","status","onReconnect","lastActivity","getStatusInfo","icon","text","color","showReconnect","statusInfo","lastActivityText","toLocaleTimeString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","onClick","title","_c","$RefreshReg$"],"sources":["D:/Navikenz/pro/navihire/frontend/src/components/common/ConnectionStatus.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface ConnectionStatusProps {\r\n  status: 'connecting' | 'connected' | 'disconnected' | 'reconnecting';\r\n  onReconnect: () => void;\r\n  lastActivity: Date | null;\r\n}\r\n\r\nconst ConnectionStatus: React.FC<ConnectionStatusProps> = ({ \r\n  status, \r\n  onReconnect, \r\n  lastActivity \r\n}) => {\r\n  const getStatusInfo = () => {\r\n    switch (status) {\r\n      case 'connected':\r\n        return {\r\n          icon: 'ðŸŸ¢',\r\n          text: 'Connected',\r\n          color: '#10b981',\r\n          showReconnect: false\r\n        };\r\n      case 'connecting':\r\n        return {\r\n          icon: 'ðŸŸ¡',\r\n          text: 'Connecting...',\r\n          color: '#f59e0b',\r\n          showReconnect: false\r\n        };\r\n      case 'reconnecting':\r\n        return {\r\n          icon: 'ðŸ”„',\r\n          text: 'Reconnecting...',\r\n          color: '#f59e0b',\r\n          showReconnect: false\r\n        };\r\n      case 'disconnected':\r\n        return {\r\n          icon: 'ðŸ”´',\r\n          text: 'Disconnected',\r\n          color: '#ef4444',\r\n          showReconnect: true\r\n        };\r\n      default:\r\n        return {\r\n          icon: 'âšª',\r\n          text: 'Unknown',\r\n          color: '#6b7280',\r\n          showReconnect: true\r\n        };\r\n    }\r\n  };\r\n\r\n  const statusInfo = getStatusInfo();\r\n  const lastActivityText = lastActivity \r\n    ? `Last activity: ${lastActivity.toLocaleTimeString()}`\r\n    : 'No activity';\r\n\r\n  return (\r\n    <div className=\"connection-status\">\r\n      <div className=\"status-indicator\">\r\n        <span className=\"status-icon\">{statusInfo.icon}</span>\r\n        <span \r\n          className=\"status-text\"\r\n          style={{ color: statusInfo.color }}\r\n        >\r\n          {statusInfo.text}\r\n        </span>\r\n        {statusInfo.showReconnect && (\r\n          <button \r\n            className=\"reconnect-button\"\r\n            onClick={onReconnect}\r\n            title=\"Click to reconnect\"\r\n          >\r\n            ðŸ”„ Reconnect\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"last-activity\" title={lastActivityText}>\r\n        {lastActivity && (\r\n          <small>{lastActivityText}</small>\r\n        )}\r\n      </div>\r\n\r\n      {/* <style jsx>{`\r\n        .connection-status {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 10px;\r\n          padding: 8px 12px;\r\n          background: #f8fafc;\r\n          border-radius: 6px;\r\n          border: 1px solid #e5e7eb;\r\n          font-size: 14px;\r\n        }\r\n\r\n        .status-indicator {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 6px;\r\n        }\r\n\r\n        .status-icon {\r\n          font-size: 12px;\r\n        }\r\n\r\n        .status-text {\r\n          font-weight: 500;\r\n        }\r\n\r\n        .reconnect-button {\r\n          background: #3b82f6;\r\n          color: white;\r\n          border: none;\r\n          padding: 4px 8px;\r\n          border-radius: 4px;\r\n          font-size: 12px;\r\n          cursor: pointer;\r\n          transition: background-color 0.2s;\r\n        }\r\n\r\n        .reconnect-button:hover {\r\n          background: #2563eb;\r\n        }\r\n\r\n        .last-activity {\r\n          color: #6b7280;\r\n          font-size: 12px;\r\n        }\r\n\r\n        @media (max-width: 768px) {\r\n          .connection-status {\r\n            flex-direction: column;\r\n            align-items: flex-start;\r\n            gap: 4px;\r\n          }\r\n        }\r\n      `}</style> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectionStatus;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1B,MAAMC,gBAAiD,GAAGA,CAAC;EACzDC,MAAM;EACNC,WAAW;EACXC;AACF,CAAC,KAAK;EACJ,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,QAAQH,MAAM;MACZ,KAAK,WAAW;QACd,OAAO;UACLI,IAAI,EAAE,IAAI;UACVC,IAAI,EAAE,WAAW;UACjBC,KAAK,EAAE,SAAS;UAChBC,aAAa,EAAE;QACjB,CAAC;MACH,KAAK,YAAY;QACf,OAAO;UACLH,IAAI,EAAE,IAAI;UACVC,IAAI,EAAE,eAAe;UACrBC,KAAK,EAAE,SAAS;UAChBC,aAAa,EAAE;QACjB,CAAC;MACH,KAAK,cAAc;QACjB,OAAO;UACLH,IAAI,EAAE,IAAI;UACVC,IAAI,EAAE,iBAAiB;UACvBC,KAAK,EAAE,SAAS;UAChBC,aAAa,EAAE;QACjB,CAAC;MACH,KAAK,cAAc;QACjB,OAAO;UACLH,IAAI,EAAE,IAAI;UACVC,IAAI,EAAE,cAAc;UACpBC,KAAK,EAAE,SAAS;UAChBC,aAAa,EAAE;QACjB,CAAC;MACH;QACE,OAAO;UACLH,IAAI,EAAE,GAAG;UACTC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,SAAS;UAChBC,aAAa,EAAE;QACjB,CAAC;IACL;EACF,CAAC;EAED,MAAMC,UAAU,GAAGL,aAAa,CAAC,CAAC;EAClC,MAAMM,gBAAgB,GAAGP,YAAY,GACjC,kBAAkBA,YAAY,CAACQ,kBAAkB,CAAC,CAAC,EAAE,GACrD,aAAa;EAEjB,oBACEZ,OAAA;IAAKa,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCd,OAAA;MAAKa,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/Bd,OAAA;QAAMa,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEJ,UAAU,CAACJ;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtDlB,OAAA;QACEa,SAAS,EAAC,aAAa;QACvBM,KAAK,EAAE;UAAEX,KAAK,EAAEE,UAAU,CAACF;QAAM,CAAE;QAAAM,QAAA,EAElCJ,UAAU,CAACH;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,EACNR,UAAU,CAACD,aAAa,iBACvBT,OAAA;QACEa,SAAS,EAAC,kBAAkB;QAC5BO,OAAO,EAAEjB,WAAY;QACrBkB,KAAK,EAAC,oBAAoB;QAAAP,QAAA,EAC3B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNlB,OAAA;MAAKa,SAAS,EAAC,eAAe;MAACQ,KAAK,EAAEV,gBAAiB;MAAAG,QAAA,EACpDV,YAAY,iBACXJ,OAAA;QAAAc,QAAA,EAAQH;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IACjC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAwDH,CAAC;AAEV,CAAC;AAACI,EAAA,GApIIrB,gBAAiD;AAsIvD,eAAeA,gBAAgB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}